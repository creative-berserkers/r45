{"version":3,"file":null,"sources":["../../src/view/states/index.js","../../src/model/states/input-query.js","../../src/model/states/list-query.js","../../src/model/states/setup.js","../../src/model/states/index.js","../../src/model/context-reducer.js","../../src/model/all-contexts-reducer.js","../../src/utils/guid.js","../../src/client/log.js","../../src/model/all-actions-reducer.js","../../src/model/all-classes-reducer.js","../../src/model/all-races-reducer.js","../../src/model/messages-reducer.js","../../src/model/index.js","../../src/client/client-io.js","../../src/view/AppContainer.js","../../src/client/index.js"],"sourcesContent":["//import introduction from './introduction'\r\n//import classSelection from './class-selection'\r\n//import townLobby from './town-lobby'\r\n//import rollDices from './roll-dices'\r\n//import assignDices from './assign-dices'\r\n//import battle from './battle'\r\n//import chat from './chat'\r\n\r\nexport {\r\n  //introduction, classSelection, townLobby, rollDices, assignDices, battle,\r\n//chat\r\n}","export const INPUT_QUERY = 'inputQuery'\r\n\r\nexport const QUERY_RESPONSE = 'INPUT_QUERY:QUERY_RESPONSE'\r\n\r\n/**\r\n * @typedef {{type: string, message: string}} ResponseAction\r\n */\r\n\r\n/**\r\n * @param {string} message\r\n * @returns ResponseAction\r\n */\r\nexport function queryResponseAction(message){\r\n  return {\r\n    type: QUERY_RESPONSE,\r\n    message\r\n  }\r\n}\r\n\r\n/**\r\n * @param {{id:string}} state\r\n * @returns string\r\n */\r\nexport function idSelector(state){\r\n  return state.id\r\n}\r\n\r\n/**\r\n * @param {{query:string}} state\r\n * @returns string\r\n */\r\nexport function querySelector(state){\r\n  return state.query\r\n}\r\n\r\n/**\r\n * @typedef {{name: string, id: string, query: string}} InputQuery\r\n */\r\n\r\n/**\r\n * @param {string} id\r\n * @param {string} query\r\n * @returns InputQuery\r\n */\r\nexport function createInputQuery({id = '', query = ''}) {\r\n  return {\r\n    name: INPUT_QUERY,\r\n    id,\r\n    query\r\n  }\r\n}\r\n\r\nconst initialState = createInputQuery({id:'', query:''})\r\n\r\n/**\r\n * @typedef {{name:string, id:string, query:string}} InputQueryState\r\n */\r\n\r\n/**\r\n * @param {InputQueryState} state\r\n * @param {*} action\r\n * @returns {* | InputQueryState}\r\n */\r\nexport default function introduction(state = initialState, action) {\r\n  switch (action.type) {\r\n    default :\r\n      return state\r\n  }\r\n}","export const LIST_QUERY = 'listQuery'\r\n\r\nexport const LIST_QUERY_RESPONSE = 'LIST_QUERY:LIST_QUERY_RESPONSE'\r\n\r\n/**\r\n * @param {number} option\r\n * @returns {{type: string, option: number}}\r\n */\r\nexport function listQueryResponseAction(option){\r\n  return {\r\n    type: LIST_QUERY_RESPONSE,\r\n    option\r\n  }\r\n}\r\n\r\n/**\r\n * @param {{id:string}} state\r\n * @returns string\r\n */\r\nexport function idSelector(state){\r\n  return state.id\r\n}\r\n\r\n/**\r\n * @param {{query:string}} state\r\n * @return string\r\n */\r\nexport function querySelector(state){\r\n  return state.query\r\n}\r\n\r\n/**\r\n * @param {{options:Array}} state\r\n * returns Array\r\n */\r\nexport function optionsSelector(state){\r\n  return state.options\r\n}\r\n\r\n/**\r\n * @typedef {{name: string, id: string, query: string, options: Array}} ListQuery\r\n */\r\n\r\n/**\r\n * @param {string} id\r\n * @param {string} query\r\n * @param {Array} options\r\n * @returns ListQuery\r\n */\r\nexport function createListQuery({id = 'none', query = 'none', options = []}) {\r\n  return {\r\n    name: LIST_QUERY,\r\n    id,\r\n    query,\r\n    options\r\n  }\r\n}\r\n\r\nconst initialState = createListQuery({id:'',query:'', options:[]})\r\n\r\n/**\r\n * @typedef {{name:string, id:string, query:string, options:Array}} ListQueryState\r\n */\r\n\r\n/**\r\n * @param {ListQueryState} state\r\n * @param {*} action\r\n * @returns {* | ListQueryState}\r\n */\r\nexport default function introduction(state = initialState, action) {\r\n  switch (action.type) {\r\n    default :\r\n      return state\r\n  }\r\n}","export const SETUP = 'setup'\r\n\r\n\r\nconst initialState = {\r\n  name: SETUP\r\n}\r\n\r\n/**\r\n * @typedef {{\r\n *          name:string}} SetupState\r\n */\r\n\r\n/**\r\n * @param {undefined | SetupState} state\r\n * @param { Action | PlayerNameAction | PlayerClassIdAction | PlayerRaceIdAction } action\r\n * @returns {* | SetupState}\r\n */\r\nexport default function introduction(state = initialState, action) {\r\n  switch (action.type) {\r\n    default :\r\n      return state\r\n  }\r\n}","//import rollDices from './roll-dices'\r\n//import introduction from './introduction'\r\n//import classSelection from './class-selection'\r\n//import townLobby from './town-lobby'\r\n//import assignDices from './assign-dices'\r\n//import battle from './battle'\r\nimport inputQuery from './input-query'\r\nimport listQuery from './list-query'\r\nimport setup from './setup'\r\n\r\nexport {\r\n  //rollDices, introduction, classSelection, townLobby, assignDices, battle,\r\ninputQuery, listQuery,setup}","import * as allClientStateReducers from './states'\r\n\r\nexport const PLAYER_NAME_SET = 'PLAYER_NAME_SET'\r\nexport const CLASS_ID_SET = 'CLASS_ID_SET'\r\nexport const RACE_ID_SET = 'RACE_ID_SET'\r\nexport const STACK_PUSH = 'STACK_PUSH'\r\nexport const STACK_POP = 'STACK_POP'\r\nexport const STACK_ACTION = 'STACK_ACTION'\r\n\r\n/**\r\n * @typedef {{type: string, playerName: string}} PlayerNameAction\r\n */\r\n\r\n/**\r\n * @param {string} playerName\r\n * @returns PlayerNameAction\r\n */\r\nexport function setPlayerNameAction(playerName) {\r\n  return {\r\n    type: PLAYER_NAME_SET,\r\n    playerName: playerName\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {{type: string, classId: string}} PlayerClassIdAction\r\n */\r\n\r\n/**\r\n * @param {string} classId\r\n * @returns PlayerClassIdAction\r\n */\r\nexport function setPlayerClassIdAction(classId) {\r\n  return {\r\n    type: CLASS_ID_SET,\r\n    classId: classId\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {{type: string, raceId: string}} PlayerRaceIdAction\r\n */\r\n\r\n/**\r\n * @param {string} raceId\r\n * @returns PlayerRaceIdAction\r\n */\r\nexport function setPlayerRaceIdAction(raceId) {\r\n  return {\r\n    type: RACE_ID_SET,\r\n    raceId: raceId\r\n  }\r\n}\r\n\r\n/**\r\n * @param action wrapped action\r\n * @returns {{type: string, action: Object}}\r\n */\r\nexport function stackAction(action){\r\n  return {\r\n    type : STACK_ACTION,\r\n    action : action\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {{type: string, name: string, initialState: *}} PushClientStateAction\r\n */\r\n\r\n/**\r\n * @param {string} name\r\n * @param {*} initialState\r\n * @returns {{type: string, name: string, initialState: *}}\r\n */\r\nexport function pushClientStateAction(name, initialState){\r\n  return {\r\n    type: STACK_PUSH ,\r\n    name: name,\r\n    initialState : initialState\r\n  }\r\n}\r\n\r\nexport function popClientStateAction(returnState) {\r\n  return {\r\n    type: STACK_POP,\r\n    returnState : returnState\r\n  }\r\n}\r\n\r\n/**\r\n * @param {{classId:string}} state\r\n * @returns {string}\r\n */\r\nexport function getClassId(state) {\r\n  return state.classId\r\n}\r\n\r\n/**\r\n * @param {{stack:Array}} state\r\n * @returns {Array}\r\n */\r\nexport function getStack(state) {\r\n  return state ? state.stack : undefined\r\n}\r\n\r\n/**\r\n * @param {{playerName:string}} state\r\n * @returns {string}\r\n */\r\nexport function getPlayerName(state) {\r\n  return state.playerName\r\n}\r\n\r\n/**\r\n * @param {{stack:Array}} state\r\n * @returns {Object}\r\n */\r\nexport function getLastStackState(state){\r\n  return state.stack[state.stack.length - 1]\r\n}\r\n\r\n/**\r\n * @param {{stack:Array.<{name}>}} state\r\n */\r\nexport function getLastStackStateName(state){\r\n  return getLastStackState(state).name\r\n}\r\n\r\n/**\r\n * @param {{stack:Array.<{name}>}} state\r\n * @param {string} name\r\n * @returns {Object}\r\n */\r\nexport function getStackStateWithName(state, name){\r\n  return state.stack.find(s => s.name === name)\r\n}\r\n\r\nconst initialState = {\r\n  playerName: 'Noname',\r\n  classId: 'mage',\r\n  raceId: 'none',\r\n  actions: [],\r\n  stack : []\r\n}\r\n\r\nexport default function contextReducer(state = initialState, action, clientStateReducers = allClientStateReducers){\r\n  switch (action.type){\r\n    case PLAYER_NAME_SET :\r\n      return {\r\n        ...state,\r\n        playerName: action.playerName\r\n      }\r\n    case CLASS_ID_SET :\r\n      return {\r\n        ...state,\r\n        classId: action.classId\r\n      }\r\n    case RACE_ID_SET :\r\n      return {\r\n        ...state,\r\n        raceId: action.raceId\r\n      }\r\n    case STACK_PUSH :\r\n      return {\r\n        ...state,\r\n        stack : [...state.stack, clientStateReducers[action.name](action.initialState, {type: '@INIT@'})]\r\n      }\r\n    case STACK_POP :\r\n      return {\r\n        ...state,\r\n        stack: state.stack.slice(0, state.length - 1)\r\n      }\r\n    case STACK_ACTION : {\r\n        const topAction = state.stack[state.stack.length-1]\r\n        if(topAction){\r\n          return {\r\n              ...state,\r\n              stack: state.stack.slice(0, state.stack.length - 1).concat(clientStateReducers[topAction.name](topAction, action.action))\r\n          }\r\n        }\r\n        return state\r\n      return\r\n    }\r\n    default : return state\r\n  }\r\n}","import contextReducer from './context-reducer'\r\n\r\nexport const CONTEXT_SPAWNED = 'CONTEXT_SPAWNED'\r\nexport const CONTEXT_DESPAWNED = 'CONTEXT_DESPAWNED'\r\nexport const CONTEXT_ACTION = 'CONTEXT_ACTION'\r\n\r\nexport function contextAction(guid, action){\r\n  return {\r\n    type : CONTEXT_ACTION,\r\n    guid : guid,\r\n    action : action\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string} guid\r\n * @returns {{type: string, guid: string|undefined}}\r\n */\r\nexport function contextSpawnedAction(guid) {\r\n  return {\r\n    type: CONTEXT_SPAWNED,\r\n    guid: guid\r\n  }\r\n}\r\n\r\nexport function contextDespawnedAction(guid){\r\n  return {\r\n    type: CONTEXT_DESPAWNED,\r\n    guid: guid\r\n  }\r\n}\r\n\r\nexport function getContext(state, guid){\r\n  return state.contexts[guid]\r\n}\r\n\r\nexport default function allContextsReducer(state = {}, action){\r\n  switch(action.type){\r\n    case CONTEXT_SPAWNED: return {...state, [action.guid]: contextReducer(state[action.guid], action)}\r\n    case CONTEXT_DESPAWNED: return {...state, [action.guid]: contextReducer(state[action.guid], action)}\r\n    case CONTEXT_ACTION: return {...state, [action.guid]: contextReducer(state[action.guid], action.action)}\r\n    default : return state\r\n  }\r\n}\r\n\r\n","function s4() {\r\n  return Math.floor((1 + Math.random()) * 0x10000)\r\n    .toString(16)\r\n    .substring(1);\r\n}\r\n\r\nexport default function guid() {\r\n\r\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\r\n    s4() + '-' + s4() + s4() + s4()\r\n}\r\n","export default {\r\n  debug(...args){\r\n    console.debug(...args)\r\n  },\r\n  info(...args){\r\n    console.info(...args)\r\n  },\r\n  warn(...args){\r\n    console.warn(...args)\r\n  },\r\n  error(...args){\r\n    console.error(...args)\r\n  }\r\n}","export const initialState = {\r\n  'action_shield': {\r\n    slots: [{\r\n      require: 1\r\n    }]\r\n  },\r\n  'action_maneuver': {\r\n    slots: [{\r\n      require: 3\r\n    }]\r\n  },\r\n  'action_throw': {\r\n    slots: [{\r\n      require: 6\r\n    }]\r\n  },\r\n  'action_fireball': {\r\n    slots: [\r\n      {\r\n        require: 5\r\n      },\r\n      {\r\n        require: 6\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {{require:number}} Slot\r\n * @typedef {{slots:Array.<Slot>}} Action\r\n * @typedef {Object.<string, Action>} AllActionState\r\n */\r\n\r\n/**\r\n * @param {AllActionState} state\r\n * @param {*} action\r\n * @returns {AllActionState}\r\n */\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    default :\r\n      return state\r\n  }\r\n}","export const initialState = {\r\n  'class_mage' : {\r\n    actions : ['action_shield','action_maneuver', 'action_throw', 'action_fireball']\r\n  },\r\n  'class_druid' : {\r\n    actions : ['action_shield','action_maneuver', 'action_throw', 'action_fireball']\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {{actions:Array.<string>}} Class\r\n * @typedef {Object.<string,Class>} AllClassesState\r\n */\r\n\r\n/**\r\n * @param {AllClassesState} state\r\n * @param {*} action\r\n * @returns {AllClassesState}\r\n */\r\nexport default function (state = initialState, action){\r\n  switch(action.type){\r\n    default : return state\r\n  }\r\n}","export const initialState = {\r\n  'race_human' : {\r\n    maxHp : 10\r\n  },\r\n  'race_elf' : {\r\n    maxHp : 10\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {{maxHp:number}} Race\r\n * @typedef {Object.<string,Race>} AllRacesState\r\n */\r\n\r\n/**\r\n * @param {AllRacesState} state\r\n * @param {*} action\r\n * @returns {AllRacesState}\r\n */\r\nexport default function (state = initialState, action){\r\n  switch(action.type){\r\n    default : return state\r\n  }\r\n}","export const MESSAGE = 'MESSAGE'\r\n\r\n/**\r\n * @typedef {{type: string, id:string, from: string, message: string}} MessageAction\r\n */\r\n\r\n/**\r\n * @param {string} id\r\n * @param {string} from\r\n * @param {string} message\r\n * @returns {MessageAction}\r\n */\r\nexport function messageAction(id, from, message) {\r\n  return {\r\n    type: MESSAGE,\r\n    id,\r\n    from,\r\n    message\r\n  }\r\n}\r\n\r\nconst initialState = []\r\n\r\n/**\r\n * @typedef {{id:string, from: string, message: string}} Message\r\n * @typedef {Array.<Message>} MessagesState\r\n */\r\n\r\n/**\r\n * @param {undefined | MessagesState} state\r\n * @param {MessageAction} action\r\n * @returns {* | MessagesState}\r\n */\r\nexport default function messagesReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case MESSAGE :\r\n      return state.concat({\r\n        id: action.id,\r\n        from: action.from,\r\n        message: action.message\r\n      })\r\n    default :\r\n      return state\r\n  }\r\n}","import allContextsReducer from './all-contexts-reducer'\r\nimport allActionsReducer from './all-actions-reducer'\r\nimport allClassesReducer from './all-classes-reducer'\r\nimport allRacesReducer from './all-races-reducer'\r\nimport messagesReducer from './messages-reducer'\r\n\r\nconst LOAD_STATE = 'LOAD_STATE'\r\n\r\n/**\r\n * @param {{classes:Array}} state\r\n * @returns {Array}\r\n */\r\nexport function allClassesSelector(state) {\r\n  return state.classes\r\n}\r\n\r\n/**\r\n * @param {{races:Array}} state\r\n * @returns {Array}\r\n */\r\nexport function allRacesSelector(state) {\r\n  return state.races\r\n}\r\n\r\nexport function loadStateAction(state) {\r\n  return {\r\n    type : LOAD_STATE,\r\n    state : state\r\n  }\r\n}\r\n\r\nexport default function rootReducer(state = {}, action) {\r\n  switch (action) {\r\n    case LOAD_STATE :\r\n      return action.state\r\n    default :\r\n      return {\r\n        messages: messagesReducer(state.messages, action),\r\n        actions: allActionsReducer(state.actions, action),\r\n        classes: allClassesReducer(state.classes, action),\r\n        races: allRacesReducer(state.races, action),\r\n        contexts: allContextsReducer(state.contexts, action)\r\n      }\r\n  }\r\n}\r\n","import guid from '../utils/guid'\r\nimport log from './log'\r\nimport {loadStateAction} from '../model/index'\r\n\r\nexport function getClientGuid(){\r\n  let authToken = localStorage.getItem('auth-token')\r\n  if(!authToken){\r\n    authToken = guid()\r\n    localStorage.setItem('auth-token', authToken)\r\n  }\r\n  return authToken\r\n}\r\n\r\nexport default function command({ dispatch }) {\r\n  const socket = io()\r\n\r\n  socket.on('connect', function onConnect(){\r\n    log.info('connected')\r\n    socket.emit('authentication', getClientGuid())\r\n  })\r\n\r\n  socket.on('initial_state', function onInitialState(state){\r\n    log.info('initial_state', state)\r\n    dispatch(loadStateAction(state))\r\n  })\r\n\r\n  socket.on('action', function onAction(action){\r\n    dispatch(action)\r\n  })\r\n\r\n  return (next) => (action) => {\r\n    const actionJSON = JSON.stringify(action)\r\n    log.info(`Action: ${actionJSON}`)\r\n    socket.emit('command_request', action)\r\n    return {}\r\n  }\r\n}\r\n","import * as React from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport * as clientStates from './states'\r\nimport {getStack} from '../model/context-reducer'\r\nimport {getContext} from '../model/all-contexts-reducer'\r\nimport {getClientGuid} from '../client/client-io'\r\n\r\nconst stackViewMapping = {\r\n  'setup:inputQuery': () => {\r\n    return <h1>Hello world from setup:inputQuery</h1>\r\n  }\r\n}\r\n\r\nexport function AppContainer({clientStateName}) {\r\n  return clientStateName ? stackViewMapping[clientStateName]() : <div>Loading...</div>\r\n}\r\n\r\nconst mapDispatchToProps = function (dispatch) {\r\n  return {}\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n  return {\r\n    clientStateName: getStack(getContext(state, getClientGuid())).map(state => state.name).join(':')\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer)","/*global __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ */\r\n\r\nimport AppContainer from '../view/AppContainer'\r\nimport rootReducer from '../model'\r\nimport commandMiddleware from './client-io'\r\nimport {createStore, applyMiddleware, compose} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport * as ReactDOM from 'react-dom'\r\nimport * as React from 'react'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(commandMiddleware)))\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <AppContainer/>\r\n    </Provider>\r\n    ,document.getElementById('mount'))\r\n"],"names":["INPUT_QUERY","createInputQuery","id","query","initialState","introduction","state","action","type","LIST_QUERY","createListQuery","options","SETUP","PLAYER_NAME_SET","CLASS_ID_SET","RACE_ID_SET","STACK_PUSH","STACK_POP","STACK_ACTION","getStack","stack","undefined","contextReducer","clientStateReducers","allClientStateReducers","playerName","classId","raceId","name","slice","length","topAction","concat","CONTEXT_SPAWNED","CONTEXT_DESPAWNED","CONTEXT_ACTION","getContext","guid","contexts","allContextsReducer","s4","Math","floor","random","toString","substring","args","debug","info","warn","error","MESSAGE","messagesReducer","from","message","LOAD_STATE","loadStateAction","rootReducer","messages","allActionsReducer","actions","allClassesReducer","classes","allRacesReducer","races","getClientGuid","authToken","localStorage","getItem","setItem","command","dispatch","socket","io","on","onConnect","emit","onInitialState","onAction","next","actionJSON","JSON","stringify","stackViewMapping","React.createElement","AppContainer","clientStateName","mapDispatchToProps","mapStateToProps","map","join","connect","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","commandMiddleware","ReactDOM","document","getElementById"],"mappings":"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"}