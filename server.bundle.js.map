{"version":3,"file":null,"sources":["src/server/log.js","src/utils/guid.js","src/utils/randomInt.js","src/utils/shallow-equal.js","src/utils/changed.js","src/utils/filter-first.js","src/model/states/roll-dices.js","src/model/states/introduction.js","src/model/states/class-selection.js","src/model/states/town-lobby.js","src/model/states/assign-dices.js","src/model/states/battle.js","src/model/action-state-reducer.js","src/model/context-reducer.js","src/model/global-reducer.js","src/server/states/introduction.js","src/server/states/class-selection.js","src/server/states/town-lobby.js","src/server/states/roll-dices.js","src/server/states/assign-dices.js","src/server/states/battle.js","src/server/middleware/server-middleware.js","src/server/middleware/response-middleware.js","src/server/server-io.js","src/server/index.js"],"sourcesContent":["const winston = require('winston')\nconst path = require('path')\n\nconst logger = new (winston.Logger)({\n  transports: [\n    new (winston.transports.Console)(),\n    new (winston.transports.File)({ filename: path.join(__dirname, 'data/server.log')})\n  ]\n})\n\nexport default {\n  debug(...args){\n    logger.debug(...args)\n  },\n  info(...args){\n    logger.info(...args)\n  },\n  warn(...args){\n    logger.warn(...args)\n  },\n  error(...args){\n    logger.error(...args)\n  }\n}","function s4() {\n  return Math.floor((1 + Math.random()) * 0x10000)\n    .toString(16)\n    .substring(1);\n}\n\nexport default function guid() {\n\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n    s4() + '-' + s4() + s4() + s4()\n}\n","export default function randomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n","export default function shallowEqual(oldState, newState){\n  const resultOldToNew = Object.keys(oldState).reduce((result, oldKey) => {\n    return result === true ? result : oldState[oldKey] !== newState[oldKey]\n  }, false)\n\n  const resultNewToOld = Object.keys(newState).reduce((result, newKey) => {\n    return result === true ? result : oldState[newKey] !== newState[newKey]\n  }, false)\n\n  return !resultNewToOld && !resultOldToNew\n}","import shallowEqual from './shallow-equal'\n\nexport default function changed(oldState, newState){\n\n  return shallowEqual(oldState, newState) ? oldState : newState\n}","export default function filterFirst(array, element){\n  let found = false\n  let newArray= []\n  array.forEach(el => {\n    if(el != element || found){\n      newArray.push(el)\n    } else {\n      found = true\n    }\n  })\n  return newArray\n}","const ROLL = 'ROLL_DICES:ROLL'\nconst LOCK = 'ROLL_DICES:LOCK'\n\n\nexport function rollAction(guid, rolledDices) {\n  return {\n    type: ROLL,\n    guid: guid,\n    rolledDices: rolledDices\n  }\n}\nexport function lockAction(guid, locks) {\n  return {\n    type: LOCK,\n    guid: guid,\n    locks: locks\n  }\n}\n\nexport function numberOfRerollsSelector(state){\n  return state.numberOfRolls\n}\n\nexport function rolledDicesSelector(state) {\n  return state.rolledDices\n}\n\nexport function locksSelector(state){\n  return state.locks\n}\n\n\nconst initialState = {\n  name: 'rollDices',\n  rolledDices: [],\n  locks:[],\n  numberOfRolls: 0\n}\n\nexport default function rollDices(state = initialState, action) {\n  switch (action.type) {\n    case ROLL:\n      return {\n        ...state,\n        rolledDices: action.rolledDices,\n        numberOfRolls: (state.numberOfRolls+1)\n      }\n    case LOCK:\n      return {\n        ...state,\n        locks : action.locks\n      }\n    default :\n      return state\n  }\n}","const initialState = {\n  name: 'introduction'\n}\n\nexport default function introduction(state = initialState, action) {\n  switch (action.type) {\n    default :\n      return state\n  }\n}","const initialState = {\n  name: 'classSelection'\n}\n\nexport default function classSelection(state = initialState, action) {\n  switch (action.type) {\n    default :\n      return state\n  }\n}","const initialState = {\n  name: 'townLobby'\n}\n\nexport default function townLobby(state = initialState, action) {\n  switch (action.type) {\n    default :\n      return state\n  }\n}","import {filterFirst} from '../../utils'\n\nconst CLIENT_STATE_ENTER_PUSH = 'CLIENT_STATE_ENTER_PUSH'\nconst ASSIGN_DICE = 'ASSIGN_DICES:ASSIGN_DICE'\nconst RESET = 'ASSIGN_DICES:RESET'\n\nexport function rolledDicesSelector(state){\n  return state.rolledDices\n}\n\nexport function currentDicesSelector(state){\n  return state.currentDices\n}\n\nexport function assignedActionsSelector(state){\n  return state.actions\n}\n\nfunction slotsReducer(state = [], action) {\n  switch (action.type) {\n    case ASSIGN_DICE : {\n      const newArray = state.slice(0)\n      newArray[action.slotIndex] = action.dice\n      return newArray\n    }\n    default :\n      return state\n  }\n}\n\nfunction actionsReducer(state = [], action) {\n  switch (action.type) {\n    case ASSIGN_DICE : {\n      const newArray = state.slice(0)\n      newArray[action.actionIndex] = slotsReducer(state[action.actionIndex], action)\n      return newArray\n    }\n    default :\n      return state\n  }\n}\n\n\nexport function assignDiceAction(guid, actionIndex, slotIndex, dice) {\n  return {\n    type: ASSIGN_DICE,\n    guid: guid,\n    actionIndex: actionIndex,\n    slotIndex: slotIndex,\n    dice: dice\n  }\n}\n\nexport function resetAction(guid) {\n  return {\n    type: RESET,\n    guid: guid\n  }\n}\n\n\nconst initialState = {\n  name: 'assignDices',\n  rolledDices: [],\n  currentDices: [],\n  actions: []\n}\nexport default function assignDices(state = initialState, action) {\n  switch (action.type) {\n    case CLIENT_STATE_ENTER_PUSH :\n      return {\n        ...state,\n        rolledDices: action.initialState.rolledDices,\n        currentDices : action.initialState.rolledDices\n      }\n    case ASSIGN_DICE :\n      return {\n        ...state,\n        actions: actionsReducer(state.actions, action),\n        currentDices : filterFirst(state.currentDices, action.dice)\n      }\n    case RESET : return {\n      ...state,\n      currentDices : state.rolledDices,\n      actions: []\n    }\n\n    default :\n      return state\n  }\n}","\nexport function groupsSelector(state){\n  return state.groups\n}\n\nconst initialState = {\n  name: 'battle',\n  groups:[{\n    id:'group1',\n    unitrefs: ['orc1', 'orc2'],\n  },{\n    id:'group2',\n    unitrefs: ['orc3','goblin1','goblin2']\n  },{\n    id:'group3',\n    unitrefs:[]\n  }],\n  units :{\n    'orc1' : {\n      hp : {\n        current: 10,\n        max: 10\n      }\n    },\n    'orc2':{\n      hp : {\n        current: 10,\n        max: 10\n      }\n    },\n    'orc3':{\n      hp : {\n        current: 10,\n        max: 10\n      }\n    },\n    'goblin1':{\n      hp : {\n        current: 10,\n        max: 10\n      }\n    },\n    'goblin2':{\n      hp : {\n        current: 10,\n        max: 10\n      }\n    }\n  }\n}\n\nexport default function battle(state = initialState, action) {\n  switch (action.type) {\n    default :\n      return state\n  }\n}","import {shallowEqual} from '../utils'\nimport * as clientActionReducers from './states'\n\nconst CLIENT_STATE_ENTER_PUSH = 'CLIENT_STATE_ENTER_PUSH'\nconst CLIENT_STATE_POP = 'CLIENT_STATE_POP'\nconst CLIENT_STATE_ENTER_REPLACE = 'CLIENT_STATE_ENTER_REPLACE'\n\nexport function pushStateAction(guid, name, initialState){\n  return {\n    type: CLIENT_STATE_ENTER_PUSH ,\n    guid: guid,\n    name: name,\n    initialState : initialState\n  }\n}\n\nexport function popStateAction(guid) {\n  return {\n    type: CLIENT_STATE_POP,\n    guid: guid\n  }\n}\n\nexport function setStateAction(guid, name){\n  return {\n    type : CLIENT_STATE_ENTER_REPLACE,\n    guid : guid,\n    name : name\n  }\n}\n\nexport default function actionStateReducer(state = [], action) {\n  switch (action.type) {\n    case CLIENT_STATE_ENTER_PUSH :\n      return state.concat(clientActionReducers[action.name](undefined, action))\n    case CLIENT_STATE_POP :\n      return state.slice(0,state.length-1)\n    case CLIENT_STATE_ENTER_REPLACE :\n      return state.slice(0,state.length-1).concat(clientActionReducers[action.name](undefined, {type:'@INIT@'}))\n    default :{\n      if(state.length === 0) return state\n      const topState = state[state.length - 1]\n      const topStateName = topState.name\n      const reducer = clientActionReducers[topStateName]\n      if(reducer){\n        const newTopState = reducer(topState, action)\n        if(shallowEqual(topState, newTopState)){\n          return state\n        } else {\n          return state.slice(0,state.length-1).concat(newTopState)\n        }\n      }\n      return state\n    }\n  }\n}","import {guid as guidGenerator} from '../utils'\nimport {changed} from '../utils'\nimport actionStateReducer from './action-state-reducer'\n\n\nexport function messageAction(from, to, message) {\n  return {\n    type: 'MESSAGE',\n    id: guidGenerator(),\n    from: from,\n    guid: (to !== 'all' ? to : undefined),\n    to: to,\n    message: message\n  }\n}\n\nexport function setNameAction(guid, name) {\n  return {\n    type: 'CLIENT_SET_NAME',\n    guid: guid,\n    name: name\n  }\n}\n\nexport function setClassAction(guid, className) {\n  return {\n    type: 'CLIENT_SET_CLASS',\n    guid: guid,\n    name: className\n  }\n}\n\nexport function nameSelector(state){\n  return state.name\n}\n\nexport function classNameSelector(state){\n  return state.className\n}\n\nexport function idSelector(state){\n  return `${nameSelector(state)}[${classNameSelector(state)}]`\n}\n\nexport function actionsSelector(state){\n  return state.actions\n}\n\nexport function actionStateSelector(state){\n  return state.actionState\n}\n\nexport function actionStateCountSelector(state){\n  return actionStateSelector(state).length\n}\n\nexport function currentActionStateSelector(state){\n  return state.actionState[state.actionState.length - 1]\n}\n\nexport function lastActionStateSelector(state, name){\n  return state.actionState.find(s => s.name === name)\n}\n\nexport function currentActionStateNameSelector(state){\n  return currentActionStateSelector(state).name\n}\n\n\nconst initialState = {\n  name: 'Noname',\n  className: 'Noone',\n  actionState: [],\n  actions: [\n    {\n      name: 'Shield',\n      slots: [{\n        require: 1\n      }]\n    },\n    {\n      name: 'Maneuver',\n      slots: [{\n        require: 3\n      }]\n    },\n    {\n      name: 'Throw',\n      slots: [{\n        require: 6\n      }]\n    },\n    {\n      name: 'Fireball',\n      slots: [\n        {\n          require: 5\n        },\n        {\n          require: 6\n        }\n      ]\n    }\n  ],\n  messages: [{\n    id: guidGenerator(),\n    from: 'Chat System',\n    to: 'all',\n    message: 'Welcome to chat'\n  }]\n}\n\nexport default function contextReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'MESSAGE' :\n      return {\n        ...state,\n        messages: state.messages.concat({\n          id: action.id,\n          from: action.from,\n          to: action.to,\n          message: action.message\n        })\n      }\n    case 'CLIENT_SET_NAME' :\n      return {\n        ...state,\n        name: action.name\n      }\n    case 'CLIENT_SET_CLASS' :\n      return {\n        ...state,\n        className: action.name\n      }\n    case 'LOAD_CLIENT_STATE' :\n      return action.state\n    default:\n      return changed(state, {\n        ...state,\n        actionState: actionStateReducer(state.actionState, action)\n      })\n  }\n}\n","import sharedContextReducer from './context-reducer'\nimport {combineReducers} from 'redux'\nimport {changed} from '../utils'\n\nexport function clientSelector(rootState, guid){\n  return rootState.contexts[guid].shared\n}\n\nconst initialState = {\n  connected : false,\n  shared : sharedContextReducer(undefined, {type:'@INIT@'})\n}\n\nfunction clientContextReducer(state = initialState, action){\n  switch (action.type){\n    case 'CONTEXT_SPAWNED': return {\n      shared : sharedContextReducer(state.shared, action),\n      connected: true\n    }\n    case 'CONTEXT_DESPAWNED': return {\n      shared: sharedContextReducer(state.shared, action),\n      connected: false\n    }\n    default : return changed(state, {\n      ...state,\n      shared : sharedContextReducer(state.shared, action)\n    })\n  }\n}\n\nfunction allContextsReducer(state = {}, action){\n  switch(action.type){\n    case 'CONTEXT_SPAWNED': return {...state, [action.guid]: clientContextReducer(state[action.guid], action)}\n    case 'CONTEXT_DESPAWNED': return {...state, [action.guid]: clientContextReducer(state[action.guid], action)}\n    default : return changed(state, Object.keys(state).reduce((newState, context) => {\n      if(action.guid){\n        if(!context) throw Error('Should not be null')\n        if(action.guid === context){\n          newState[context] = clientContextReducer(state[context], action)\n        } else {\n          newState[context] = state[context]\n        }\n      } else {\n        newState[context] = clientContextReducer(state[context], action)\n      }\n\n      return newState\n    }, {}))\n  }\n}\n\nexport default combineReducers({\n  contexts : allContextsReducer\n})\n","import {messageAction, setNameAction} from '../../model/context-reducer'\nimport {setStateAction} from '../../model/action-state-reducer'\n\nexport default {\n  onEnter: (guid, getState, dispatch)=>{\n    //dispatch(message('GM', guid, 'You are entering town gate, the sign says \"Welcome to Northwinter\". Gate keeper is looking at you very suspiciously.'))\n    //dispatch(message('Gate Keeper', guid, 'Who the fuck are you?'))\n    //dispatch(message('GM' , guid, 'You are quite sure that not giving this man proper answer will get you into trouble. Please type your name.'))\n    dispatch(messageAction('GM' , guid, 'Name?'))\n  },\n  onCommand:(guid, getState, dispatch, command)=>{\n    const name = command\n    //dispatch(message('Gate Keeper', guid, `So... Your name is ${command}. I have never heard about you.`))\n    //dispatch(message('GM', guid, 'Gate Keeper now looks at you even more suspiciously.'))\n    dispatch(setNameAction(guid, name))\n    dispatch(setStateAction(guid, 'classSelection'))\n  }\n}","import {messageAction, setClassAction} from '../../model/context-reducer'\nimport {setStateAction} from '../../model/action-state-reducer'\n\nconst classes = ['mage', 'warrior', 'priest', 'hunter', 'stone']\nconst gateKeeper = 'Gate Keeper'\n\nexport default {\n  onEnter: (guid, getState, dispatch)=>{\n    //dispatch(message(gateKeeper, guid, 'Listen buddy, we have rules here, and the rules are: '+\n    //  'Every fucker entering that town behind me must be on the list I have here. If not...'))\n    //dispatch(message('GM', guid, 'Gate keeper looks at amulet you have on your neck.'))\n\n    //dispatch(message(gateKeeper, guid,' well give me a second and I will sign you in.'))\n    //dispatch(message(gateKeeper, guid,'I just need to know your class'))\n    //dispatch(message('GM', guid, `Available classes are: ${classes.join(', ')} type in the name of the class you want`))\n    dispatch(messageAction('GM', guid,`Class?[${classes.join(', ')}]`))\n  },\n  onCommand:(guid, getState, dispatch, command)=>{\n    if(classes.includes(command)){\n      //dispatch(message(gateKeeper, guid, 'Yes... yes... we allow those guys in, come in...'))\n      dispatch(setClassAction(guid, command))\n      dispatch(setStateAction(guid, 'townLobby'))\n    } else {\n      //dispatch(message(gateKeeper, guid, `No, we don\\'t allow any ${command} in this town. You must be thinking about something else.`))\n      dispatch(messageAction(gateKeeper, guid, `Unknown class ${command}.`))\n\n    }\n  }\n}","import {messageAction, idSelector} from '../../model/context-reducer'\nimport {pushStateAction} from '../../model/action-state-reducer'\nimport {clientSelector} from '../../model/global-reducer'\n\nconst GM = 'GM'\n\nexport default {\n  onEnter: (guid, getState, dispatch)=>{\n    dispatch(messageAction(GM, guid, 'You are entering the town area. You see your friends here.'))\n  },\n  onReturn:(guid, getState, dispatch, fromState, returnedState)=>{\n    if(fromState === 'rollDices'){\n      dispatch(pushStateAction(guid, 'assignDices', {\n        rolledDices : returnedState.rolledDices\n      }))\n    }\n  },\n  onCommand:(guid, getState, dispatch, command)=>{\n    const state = getState()\n    if(command === '/battle'){\n      dispatch(pushStateAction(guid, 'battle'))\n    } else{\n      dispatch(messageAction(idSelector(clientSelector(state, guid)), 'all', command))\n    }\n  }\n}","import {messageAction, currentActionStateSelector} from '../../model/context-reducer'\nimport {popStateAction} from '../../model/action-state-reducer'\nimport {clientSelector} from '../../model/global-reducer'\nimport {randomInt} from '../../utils'\nimport {rollAction, lockAction, numberOfRerollsSelector, rolledDicesSelector, locksSelector} from '../../model/states/roll-dices'\n\nfunction onFinishRolling(getState, guid, dispatch) {\n  dispatch(popStateAction(guid))\n}\n\nexport default {\n  onEnter: (guid, getState, dispatch) => {\n    const firstRoll = [randomInt(1, 7), randomInt(1, 7), randomInt(1, 7), randomInt(1, 7), randomInt(1, 7)]\n    const locks = [false, false, false, false]\n    dispatch(rollAction(guid, firstRoll))\n    dispatch(lockAction(guid, locks))\n  },\n  onCommand: (guid, getState, dispatch, command) => {\n    const state = getState()\n    if (command.startsWith('/reroll')) {\n      const currentDices = rolledDicesSelector(currentActionStateSelector(clientSelector(state, guid)))\n      const currentLocks = locksSelector(currentActionStateSelector(clientSelector(state, guid)))\n      const newDices = currentDices.map((el, index) => {\n        if (!currentLocks[index]) {\n          return randomInt(1, 7)\n        } else {\n          return el\n        }\n      })\n      //dispatch(message('GM', guid, `After ${numberOfRerolls(client(state, guid))} rerolls, you have: ${newDices}`))\n\n      dispatch(rollAction(guid, newDices))\n      if (numberOfRerollsSelector(currentActionStateSelector(clientSelector(state, guid))) >= 2) {\n        onFinishRolling(getState, guid, dispatch)\n      }\n    } else if (command.startsWith('/keep')) {\n      onFinishRolling(state, guid, dispatch)\n    } else if (command.startsWith('/lock')) {\n      const splited = command.split(' ')\n      if (splited.length === 2) {\n        const index = +(splited[1])\n        const currentLocks = locksSelector(currentActionStateSelector(clientSelector(state, guid)))\n        let newLocks = currentLocks.slice(0, currentLocks.length)\n        newLocks[index] = !newLocks[index]\n        dispatch(lockAction(guid, newLocks))\n      }\n    } else {\n      dispatch(messageAction('GM', guid, 'Unrecognized command, please use /reroll <number> ... <number> or /keep'))\n    }\n  }\n}","import {\n  currentActionStateSelector,\n  actionsSelector,\n  messageAction,\n  idSelector\n} from '../../model/context-reducer'\nimport {clientSelector} from '../../model/global-reducer'\n\nimport {\n  currentDicesSelector,\n  assignedActionsSelector,\n  assignDiceAction,\n  resetAction\n} from '../../model/states/assign-dices'\nimport {popStateAction} from '../../model/action-state-reducer'\n\n\nexport default {\n  onCommand(guid, getState, dispatch, command){\n    const state = getState()\n    if (command.startsWith('/assign')) {\n      const clientRolledDices = currentDicesSelector(currentActionStateSelector(clientSelector(state, guid)))\n      const splited = command.split(' ')\n      const actionIndex = +splited[1]\n      const slotIndex = +splited[2]\n      const clientActions = actionsSelector(clientSelector(state, guid))\n      const selectedAction = clientActions[actionIndex]\n      const selectedSlot = selectedAction.slots[slotIndex]\n      const requiredDice = selectedSlot.require\n\n      if (clientRolledDices.includes(requiredDice)) {\n        dispatch(assignDiceAction(guid, actionIndex, slotIndex, requiredDice))\n      }\n    } else if (command.startsWith('/reset')) {\n      dispatch(resetAction(guid))\n    } else if (command.startsWith('/done')) {\n      const player = idSelector(clientSelector(state, guid))\n      const clientActions = actionsSelector(clientSelector(state, guid))\n      const clientAssignedActions = assignedActionsSelector(currentActionStateSelector(clientSelector(state, guid)))\n\n      const enabledActions = []\n\n      clientActions.forEach((clientAction, actionIndex) => {\n        const slots = clientAssignedActions[actionIndex]\n        if (!slots) return\n        let passed = true\n        clientAction.slots.forEach((actionSlot, slotIndex) => {\n          const dice = slots[slotIndex]\n          if (actionSlot.require !== dice) {\n            passed = false\n          }\n        })\n        if (passed) {\n          enabledActions.push(clientAction)\n        }\n      })\n\n      dispatch(messageAction('GM', 'all', `${player} enabled [${enabledActions.map(a => a.name)}]`))\n      dispatch(popStateAction(guid))\n    }\n  }\n}","import {messageAction} from '../../model/context-reducer'\nimport {pushStateAction} from '../../model/action-state-reducer'\nimport {clientSelector} from '../../model/global-reducer'\nimport log from '../log'\n\nconst GM = 'GM'\n\nexport default {\n  onEnter: (guid, getState, dispatch)=>{\n    dispatch(messageAction(GM, guid, 'You are entering battle.'))\n    dispatch(pushStateAction(guid, 'rollDices'))\n  },\n  onReturn:(guid, getState, dispatch, fromState, returnedState)=>{\n    log.info(`${guid} Return from state: `, fromState, returnedState)\n    if(fromState === 'rollDices'){\n      dispatch(pushStateAction(guid, 'assignDices', {\n        rolledDices : returnedState.rolledDices\n      }))\n    }\n  },\n  onCommand:(guid, getState, dispatch, command)=>{\n    const state = getState()\n\n  }\n}","import * as actionStateHandlers from './../states'\nimport log from '../log'\nimport {clientSelector} from '../../model/global-reducer'\nimport {\n  actionStateCountSelector,\n  currentActionStateNameSelector,\n  currentActionStateSelector\n} from '../../model/context-reducer'\n\nexport default function serverMiddleware({getState, dispatch}) {\n  return (next) => (action) => {\n    if (action.type === 'CONTEXT_SPAWNED') {\n      const result = next(action)\n      if (actionStateCountSelector(clientSelector(getState(), action.guid)) === 0) {\n        dispatch({\n          type: 'CLIENT_STATE_ENTER_PUSH',\n          guid: action.guid,\n          name: 'introduction'\n        })\n      }\n      return result\n    } else if (action.type === 'CLIENT_STATE_ENTER_PUSH' || action.type === 'CLIENT_STATE_ENTER_REPLACE') {\n      const result = next(action)\n      if (actionStateCountSelector(clientSelector(getState(), action.guid)) > 0) {\n        const name = currentActionStateNameSelector(clientSelector(getState(), action.guid))\n        log.info(`${action.guid} entering state ${name}`)\n        if (actionStateHandlers[name].onEnter) {\n          actionStateHandlers[name].onEnter(action.guid, getState, dispatch)\n        }\n      }\n      return result\n    } else if (action.type === 'CLIENT_STATE_POP') {\n      const fromStateName = currentActionStateNameSelector(clientSelector(getState(), action.guid))\n      const fromStateInternalState = currentActionStateSelector(clientSelector(getState(), action.guid))\n      const result = next(action)\n      if (actionStateCountSelector(clientSelector(getState(), action.guid)) > 0) {\n        const name = currentActionStateNameSelector(clientSelector(getState(), action.guid))\n        log.info(`${action.guid} returning from ${fromStateName} state  to ${name} state`)\n        if (actionStateHandlers[name].onReturn) {\n          actionStateHandlers[name].onReturn(action.guid, getState, dispatch, fromStateName, fromStateInternalState)\n        }\n      }\n      return result\n    } else if (action.type === 'COMMAND_REQUEST') {\n      if (actionStateCountSelector(clientSelector(getState(), action.guid)) > 0) {\n        const name = currentActionStateNameSelector(clientSelector(getState(), action.guid))\n        actionStateHandlers[name].onCommand(action.guid, getState, dispatch, action.command)\n      }\n    } else {\n      return next(action)\n    }\n  }\n}","import {shallowEqual} from '../../utils'\nimport log from '../log'\n\nexport default function serverMiddleware(clientGuidToSocket, { getState, dispatch }) {\n  return (next) => (action) => {\n    log.info(`Action ${JSON.stringify(action)}`)\n    const stateBeforeRequest = getState()\n    const result = next(action)\n    const stateAfterRequest = getState()\n    Object.keys(stateBeforeRequest.contexts).forEach((key) => {\n\n      const stateChanged = !shallowEqual(stateBeforeRequest.contexts[key].shared, stateAfterRequest.contexts[key].shared)\n      const targetSocket = clientGuidToSocket[key]\n      if(stateChanged && targetSocket){\n        log.info(`After ${action.type} state for ${key} changed, sending action`)\n        targetSocket.emit('action', action)\n      } else {\n        log.info(`After ${action.type} state for ${key} is same`)\n      }\n      if(!targetSocket){\n        log.warn(`Client ${key} disconnected and is not receiving state changes`)\n      }\n    })\n    return result\n  }\n}","import fs from 'fs'\nimport path from 'path'\nimport globalReducer from 'model/global-reducer'\nimport serverMiddleware from './middleware/server-middleware'\nimport responseMiddleware from './middleware/response-middleware'\nimport log from './log'\nimport {createStore, applyMiddleware} from 'redux'\n\nconst dataDirPath = path.join(__dirname, 'data')\nconst stateFilePath = path.join(__dirname, 'data/state.json')\n\nconst clientSocketIdToGuid = {}\nconst clientGuidToSocket = {}\n\nif (!fs.existsSync(dataDirPath)){\n  fs.mkdirSync(dataDirPath)\n}\nlet stateStr = '{}'\ntry {\n  stateStr = fs.readFileSync(stateFilePath, 'utf8')\n} catch(e) {\n  fs.writeFileSync(stateFilePath, '{}', { flag: 'wx' })\n}\n\nif(stateStr.trim().length === 0) stateStr = '{}'\nconst store = createStore(globalReducer, JSON.parse(stateStr), applyMiddleware(serverMiddleware,responseMiddleware.bind(undefined,clientGuidToSocket)))\n\nstore.subscribe(function persistState(){\n  const currentState = store.getState()\n  if(currentState === undefined){\n    log.warn('Saving empty state.')\n  } else {\n    fs.writeFileSync(stateFilePath, JSON.stringify(currentState, null, 2))\n  }\n})\n\nexport default function onSocket(io, socket){\n  const ipAddress = socket.request.connection.remoteAddress\n  const clientId = `${ipAddress}`\n  log.info(`client ??@${clientId} connected`)\n\n  socket.on('authentication', function(authToken){\n    clientSocketIdToGuid[socket.id] = authToken\n    clientGuidToSocket[authToken] = socket\n    log.info(`client ??@${clientId} authenticated as ${authToken}`)\n    store.dispatch({\n      type: 'CONTEXT_SPAWNED',\n      guid: authToken\n    })\n    socket.emit('initial_state', store.getState().contexts[authToken].shared)\n  })\n\n  socket.on('disconnect', function() {\n    log.info(`client ${clientSocketIdToGuid[socket.id]}@${clientId} disconnected`)\n    store.dispatch({\n      type: 'CONTEXT_DESPAWNED',\n      guid: clientSocketIdToGuid[socket.id]\n    })\n    clientGuidToSocket[clientSocketIdToGuid[socket.id]] = undefined\n    clientSocketIdToGuid[socket.id] = undefined\n  })\n\n  socket.on('command_request', function(action){\n    if(action.type !== 'COMMAND_REQUEST') return\n    log.info(`client ${clientSocketIdToGuid[socket.id]}@${clientId} command:${JSON.stringify(action.command)}`)\n    store.dispatch({\n      type: action.type,\n      guid: clientSocketIdToGuid[socket.id],\n      command: action.command\n    })\n  })\n}\n","import express from 'express'\nimport path from 'path'\nimport http from 'http'\nimport socketIO from 'socket.io'\n\nimport log from './log'\nimport serverIO from './server-io'\n\nconst app = express()\nconst host = '0.0.0.0'\nconst port = process.env.PORT || 8080\n\nprocess.env.PWD = process.cwd()\n\napp.use('/public', express.static(path.join(process.env.PWD, 'public')))\n\napp.get('/favicon.ico', function(req, res) {\n  res.sendFile(path.join(process.env.PWD, 'public/favicon.ico'))\n})\n\napp.get('/', function(req, res) {\n  res.sendFile(path.join(process.env.PWD, 'public/index.html'))\n})\n\nconst server = http.createServer(app)\nconst io = socketIO(server)\n\nio.on('connection', serverIO.bind(undefined, io))\n\nserver.listen(port, host, function(err) {\n  if (err) log.error(err)\n  else {\n    log.info(`Listening at http://${host}:${port}`)\n  }\n})\n"],"names":["winston","require","path","logger","Logger","transports","Console","File","filename","join","__dirname","args","debug","info","warn","error","s4","Math","floor","random","toString","substring","guid","randomInt","min","max","ceil","shallowEqual","oldState","newState","resultOldToNew","Object","keys","reduce","result","oldKey","resultNewToOld","newKey","changed","filterFirst","array","element","found","newArray","forEach","el","push","ROLL","LOCK","rollAction","rolledDices","lockAction","locks","numberOfRerollsSelector","state","numberOfRolls","rolledDicesSelector","locksSelector","initialState","rollDices","action","type","introduction","classSelection","townLobby","CLIENT_STATE_ENTER_PUSH","ASSIGN_DICE","RESET","currentDicesSelector","currentDices","assignedActionsSelector","actions","slotsReducer","slice","slotIndex","dice","actionsReducer","actionIndex","assignDiceAction","resetAction","assignDices","battle","CLIENT_STATE_POP","CLIENT_STATE_ENTER_REPLACE","pushStateAction","name","popStateAction","setStateAction","actionStateReducer","concat","clientActionReducers","undefined","length","topState","topStateName","reducer","newTopState","messageAction","from","to","message","guidGenerator","setNameAction","setClassAction","className","nameSelector","classNameSelector","idSelector","actionsSelector","actionStateSelector","actionState","actionStateCountSelector","currentActionStateSelector","currentActionStateNameSelector","contextReducer","messages","id","clientSelector","rootState","contexts","shared","sharedContextReducer","clientContextReducer","allContextsReducer","context","Error","combineReducers","getState","dispatch","command","classes","gateKeeper","includes","GM","fromState","returnedState","onFinishRolling","firstRoll","startsWith","currentLocks","newDices","map","index","splited","split","newLocks","clientRolledDices","clientActions","selectedAction","selectedSlot","slots","requiredDice","player","clientAssignedActions","enabledActions","clientAction","passed","actionSlot","a","serverMiddleware","next","actionStateHandlers","onEnter","fromStateName","fromStateInternalState","onReturn","onCommand","clientGuidToSocket","JSON","stringify","stateBeforeRequest","stateAfterRequest","key","stateChanged","targetSocket","emit","dataDirPath","stateFilePath","clientSocketIdToGuid","fs","existsSync","mkdirSync","stateStr","readFileSync","e","writeFileSync","flag","trim","store","createStore","globalReducer","parse","applyMiddleware","responseMiddleware","bind","subscribe","persistState","currentState","onSocket","io","socket","ipAddress","request","connection","remoteAddress","clientId","on","authToken","app","express","host","port","process","env","PORT","PWD","cwd","use","static","get","req","res","sendFile","server","http","createServer","socketIO","serverIO","listen","err","log"],"mappings":"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"}