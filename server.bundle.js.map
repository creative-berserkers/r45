{"version":3,"file":null,"sources":["src/server/log.js","src/model/states/input-query.js","src/model/states/list-query.js","src/model/states/setup.js","src/model/states/index.js","src/model/context-reducer.js","src/model/all-contexts-reducer.js","src/server/states/input-query.js","src/server/states/list-query.js","src/model/all-actions-reducer.js","src/model/all-classes-reducer.js","src/model/all-races-reducer.js","src/model/messages-reducer.js","src/model/index.js","src/model/states/battle.js","src/server/states/setup.js","src/server/states/index.js","src/server/middleware/server-middleware.js","src/utils/shallow-equal.js","src/server/middleware/response-middleware.js","src/server/server-io.js","src/server/index.js"],"sourcesContent":["const winston = require('winston')\r\nconst path = require('path')\r\n\r\nconst logger = new (winston.Logger)({\r\n  transports: [\r\n    new (winston.transports.Console)(),\r\n    new (winston.transports.File)({ filename: path.join(__dirname, 'data/server.log')})\r\n  ]\r\n})\r\n\r\nexport default {\r\n  debug(...args){\r\n    logger.debug(...args)\r\n  },\r\n  info(...args){\r\n    logger.info(...args)\r\n  },\r\n  warn(...args){\r\n    logger.warn(...args)\r\n  },\r\n  error(...args){\r\n    logger.error(...args)\r\n  }\r\n}","export const INPUT_QUERY = 'inputQuery'\r\n\r\nexport const QUERY_RESPONSE = 'INPUT_QUERY:QUERY_RESPONSE'\r\n\r\n/**\r\n * @typedef {{type: string, message: string}} ResponseAction\r\n */\r\n\r\n/**\r\n * @param {string} message\r\n * @returns ResponseAction\r\n */\r\nexport function queryResponseAction(message){\r\n  return {\r\n    type: QUERY_RESPONSE,\r\n    message\r\n  }\r\n}\r\n\r\n/**\r\n * @param {{id:string}} state\r\n * @returns string\r\n */\r\nexport function idSelector(state){\r\n  return state.id\r\n}\r\n\r\n/**\r\n * @param {{query:string}} state\r\n * @returns string\r\n */\r\nexport function querySelector(state){\r\n  return state.query\r\n}\r\n\r\n/**\r\n * @typedef {{name: string, id: string, query: string}} InputQuery\r\n */\r\n\r\n/**\r\n * @param {string} id\r\n * @param {string} query\r\n * @returns InputQuery\r\n */\r\nexport function createInputQuery({id = '', query = ''}) {\r\n  return {\r\n    name: INPUT_QUERY,\r\n    id,\r\n    query\r\n  }\r\n}\r\n\r\nconst initialState = createInputQuery({id:'', query:''})\r\n\r\n/**\r\n * @typedef {{name:string, id:string, query:string}} InputQueryState\r\n */\r\n\r\n/**\r\n * @param {InputQueryState} state\r\n * @param {*} action\r\n * @returns {* | InputQueryState}\r\n */\r\nexport default function introduction(state = initialState, action) {\r\n  switch (action.type) {\r\n    default :\r\n      return state\r\n  }\r\n}","export const LIST_QUERY = 'listQuery'\r\n\r\nexport const LIST_QUERY_RESPONSE = 'LIST_QUERY:LIST_QUERY_RESPONSE'\r\n\r\n/**\r\n * @param {number} option\r\n * @returns {{type: string, option: number}}\r\n */\r\nexport function listQueryResponseAction(option){\r\n  return {\r\n    type: LIST_QUERY_RESPONSE,\r\n    option\r\n  }\r\n}\r\n\r\n/**\r\n * @param {{id:string}} state\r\n * @returns string\r\n */\r\nexport function idSelector(state){\r\n  return state.id\r\n}\r\n\r\n/**\r\n * @param {{query:string}} state\r\n * @return string\r\n */\r\nexport function querySelector(state){\r\n  return state.query\r\n}\r\n\r\n/**\r\n * @param {{options:Array}} state\r\n * returns Array\r\n */\r\nexport function optionsSelector(state){\r\n  return state.options\r\n}\r\n\r\n/**\r\n * @typedef {{name: string, id: string, query: string, options: Array}} ListQuery\r\n */\r\n\r\n/**\r\n * @param {string} id\r\n * @param {string} query\r\n * @param {Array} options\r\n * @returns ListQuery\r\n */\r\nexport function createListQuery({id = 'none', query = 'none', options = []}) {\r\n  return {\r\n    name: LIST_QUERY,\r\n    id,\r\n    query,\r\n    options\r\n  }\r\n}\r\n\r\nconst initialState = createListQuery({id:'',query:'', options:[]})\r\n\r\n/**\r\n * @typedef {{name:string, id:string, query:string, options:Array}} ListQueryState\r\n */\r\n\r\n/**\r\n * @param {ListQueryState} state\r\n * @param {*} action\r\n * @returns {* | ListQueryState}\r\n */\r\nexport default function introduction(state = initialState, action) {\r\n  switch (action.type) {\r\n    default :\r\n      return state\r\n  }\r\n}","export const SETUP = 'setup'\r\n\r\n\r\nconst initialState = {\r\n  name: SETUP\r\n}\r\n\r\n/**\r\n * @typedef {{\r\n *          name:string}} SetupState\r\n */\r\n\r\n/**\r\n * @param {undefined | SetupState} state\r\n * @param { Action | PlayerNameAction | PlayerClassIdAction | PlayerRaceIdAction } action\r\n * @returns {* | SetupState}\r\n */\r\nexport default function introduction(state = initialState, action) {\r\n  switch (action.type) {\r\n    default :\r\n      return state\r\n  }\r\n}","//import rollDices from './roll-dices'\r\n//import introduction from './introduction'\r\n//import classSelection from './class-selection'\r\n//import townLobby from './town-lobby'\r\n//import assignDices from './assign-dices'\r\n//import battle from './battle'\r\nimport inputQuery from './input-query'\r\nimport listQuery from './list-query'\r\nimport setup from './setup'\r\n\r\nexport {\r\n  //rollDices, introduction, classSelection, townLobby, assignDices, battle,\r\ninputQuery, listQuery,setup}","import * as allClientStateReducers from './states'\r\n\r\nexport const PLAYER_NAME_SET = 'PLAYER_NAME_SET'\r\nexport const CLASS_ID_SET = 'CLASS_ID_SET'\r\nexport const RACE_ID_SET = 'RACE_ID_SET'\r\nexport const STACK_PUSH = 'STACK_PUSH'\r\nexport const STACK_POP = 'STACK_POP'\r\nexport const STACK_ACTION = 'STACK_ACTION'\r\n\r\n/**\r\n * @typedef {{type: string, playerName: string}} PlayerNameAction\r\n */\r\n\r\n/**\r\n * @param {string} playerName\r\n * @returns PlayerNameAction\r\n */\r\nexport function setPlayerNameAction(playerName) {\r\n  return {\r\n    type: PLAYER_NAME_SET,\r\n    playerName: playerName\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {{type: string, classId: string}} PlayerClassIdAction\r\n */\r\n\r\n/**\r\n * @param {string} classId\r\n * @returns PlayerClassIdAction\r\n */\r\nexport function setPlayerClassIdAction(classId) {\r\n  return {\r\n    type: CLASS_ID_SET,\r\n    classId: classId\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {{type: string, raceId: string}} PlayerRaceIdAction\r\n */\r\n\r\n/**\r\n * @param {string} raceId\r\n * @returns PlayerRaceIdAction\r\n */\r\nexport function setPlayerRaceIdAction(raceId) {\r\n  return {\r\n    type: RACE_ID_SET,\r\n    raceId: raceId\r\n  }\r\n}\r\n\r\n/**\r\n * @param action wrapped action\r\n * @returns {{type: string, action: Object}}\r\n */\r\nexport function stackAction(action){\r\n  return {\r\n    type : STACK_ACTION,\r\n    action : action\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {{type: string, name: string, initialState: *}} PushClientStateAction\r\n */\r\n\r\n/**\r\n * @param {string} name\r\n * @param {*} initialState\r\n * @returns {{type: string, name: string, initialState: *}}\r\n */\r\nexport function pushClientStateAction(name, initialState){\r\n  return {\r\n    type: STACK_PUSH ,\r\n    name: name,\r\n    initialState : initialState\r\n  }\r\n}\r\n\r\nexport function popClientStateAction(returnState) {\r\n  return {\r\n    type: STACK_POP,\r\n    returnState : returnState\r\n  }\r\n}\r\n\r\n/**\r\n * @param {{classId:string}} state\r\n * @returns {string}\r\n */\r\nexport function getClassId(state) {\r\n  return state.classId\r\n}\r\n\r\n/**\r\n * @param {{stack:Array}} state\r\n * @returns {Array}\r\n */\r\nexport function getStack(state) {\r\n  return state ? state.stack : undefined\r\n}\r\n\r\n/**\r\n * @param {{playerName:string}} state\r\n * @returns {string}\r\n */\r\nexport function getPlayerName(state) {\r\n  return state.playerName\r\n}\r\n\r\n/**\r\n * @param {{stack:Array}} state\r\n * @returns {Object}\r\n */\r\nexport function getLastStackState(state){\r\n  return state.stack[state.stack.length - 1]\r\n}\r\n\r\n/**\r\n * @param {{stack:Array.<{name}>}} state\r\n */\r\nexport function getLastStackStateName(state){\r\n  return getLastStackState(state).name\r\n}\r\n\r\n/**\r\n * @param {{stack:Array.<{name}>}} state\r\n * @param {string} name\r\n * @returns {Object}\r\n */\r\nexport function getStackStateWithName(state, name){\r\n  return state.stack.find(s => s.name === name)\r\n}\r\n\r\nconst initialState = {\r\n  playerName: 'Noname',\r\n  classId: 'mage',\r\n  raceId: 'none',\r\n  actions: [],\r\n  stack : []\r\n}\r\n\r\nexport default function contextReducer(state = initialState, action, clientStateReducers = allClientStateReducers){\r\n  switch (action.type){\r\n    case PLAYER_NAME_SET :\r\n      return {\r\n        ...state,\r\n        playerName: action.playerName\r\n      }\r\n    case CLASS_ID_SET :\r\n      return {\r\n        ...state,\r\n        classId: action.classId\r\n      }\r\n    case RACE_ID_SET :\r\n      return {\r\n        ...state,\r\n        raceId: action.raceId\r\n      }\r\n    case STACK_PUSH :\r\n      return {\r\n        ...state,\r\n        stack : [...state.stack, clientStateReducers[action.name](action.initialState, {type: '@INIT@'})]\r\n      }\r\n    case STACK_POP :\r\n      return {\r\n        ...state,\r\n        stack: state.stack.slice(0, state.length - 1)\r\n      }\r\n    case STACK_ACTION : {\r\n        const topAction = state.stack[state.stack.length-1]\r\n        if(topAction){\r\n          return {\r\n              ...state,\r\n              stack: state.stack.slice(0, state.stack.length - 1).concat(clientStateReducers[topAction.name](topAction, action.action))\r\n          }\r\n        }\r\n        return state\r\n      return\r\n    }\r\n    default : return state\r\n  }\r\n}","import contextReducer from './context-reducer'\r\n\r\nexport const CONTEXT_SPAWNED = 'CONTEXT_SPAWNED'\r\nexport const CONTEXT_DESPAWNED = 'CONTEXT_DESPAWNED'\r\nexport const CONTEXT_ACTION = 'CONTEXT_ACTION'\r\n\r\nexport function contextAction(guid, action){\r\n  return {\r\n    type : CONTEXT_ACTION,\r\n    guid : guid,\r\n    action : action\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string} guid\r\n * @returns {{type: string, guid: string|undefined}}\r\n */\r\nexport function contextSpawnedAction(guid) {\r\n  return {\r\n    type: CONTEXT_SPAWNED,\r\n    guid: guid\r\n  }\r\n}\r\n\r\nexport function contextDespawnedAction(guid){\r\n  return {\r\n    type: CONTEXT_DESPAWNED,\r\n    guid: guid\r\n  }\r\n}\r\n\r\nexport function getContext(state, guid){\r\n  return state.contexts[guid]\r\n}\r\n\r\nexport default function allContextsReducer(state = {}, action){\r\n  switch(action.type){\r\n    case CONTEXT_SPAWNED: return {...state, [action.guid]: contextReducer(state[action.guid], action)}\r\n    case CONTEXT_DESPAWNED: return {...state, [action.guid]: contextReducer(state[action.guid], action)}\r\n    case CONTEXT_ACTION: return {...state, [action.guid]: contextReducer(state[action.guid], action.action)}\r\n    default : return state\r\n  }\r\n}\r\n\r\n","import {contextAction} from '../../model/all-contexts-reducer'\r\nimport {QUERY_RESPONSE} from '../../model/states/input-query'\r\nimport {popClientStateAction} from '../../model/context-reducer'\r\n\r\nexport default {\r\n  onEnter: (getState, dispatch, next, {guid})=>{},\r\n  onAction:(getState, dispatch, next, {action, guid})=>{\r\n    switch(action.type){\r\n      case QUERY_RESPONSE: {\r\n        next(contextAction(guid,action))\r\n        dispatch(contextAction(guid,popClientStateAction(action.message)))\r\n      }\r\n    }\r\n  }\r\n}","import {contextAction, getContext} from '../../model/all-contexts-reducer'\r\nimport {getLastStackState, popClientStateAction} from '../../model/context-reducer'\r\nimport {LIST_QUERY_RESPONSE, optionsSelector} from '../../model/states/list-query'\r\n\r\nexport default {\r\n  onAction: (getState, dispatch, next, {action, guid}) => {\r\n    switch (action.type) {\r\n      case LIST_QUERY_RESPONSE: {\r\n        const state = getState()\r\n        const options = optionsSelector(getLastStackState(getContext(state, guid)))\r\n        if (action.option >= 0 && action.option < options.length) {\r\n          next(contextAction(guid, action))\r\n          dispatch(contextAction(guid, popClientStateAction(options[action.option])))\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","export const initialState = {\r\n  'action_shield': {\r\n    slots: [{\r\n      require: 1\r\n    }]\r\n  },\r\n  'action_maneuver': {\r\n    slots: [{\r\n      require: 3\r\n    }]\r\n  },\r\n  'action_throw': {\r\n    slots: [{\r\n      require: 6\r\n    }]\r\n  },\r\n  'action_fireball': {\r\n    slots: [\r\n      {\r\n        require: 5\r\n      },\r\n      {\r\n        require: 6\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {{require:number}} Slot\r\n * @typedef {{slots:Array.<Slot>}} Action\r\n * @typedef {Object.<string, Action>} AllActionState\r\n */\r\n\r\n/**\r\n * @param {AllActionState} state\r\n * @param {*} action\r\n * @returns {AllActionState}\r\n */\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    default :\r\n      return state\r\n  }\r\n}","export const initialState = {\r\n  'class_mage' : {\r\n    actions : ['action_shield','action_maneuver', 'action_throw', 'action_fireball']\r\n  },\r\n  'class_druid' : {\r\n    actions : ['action_shield','action_maneuver', 'action_throw', 'action_fireball']\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {{actions:Array.<string>}} Class\r\n * @typedef {Object.<string,Class>} AllClassesState\r\n */\r\n\r\n/**\r\n * @param {AllClassesState} state\r\n * @param {*} action\r\n * @returns {AllClassesState}\r\n */\r\nexport default function (state = initialState, action){\r\n  switch(action.type){\r\n    default : return state\r\n  }\r\n}","export const initialState = {\r\n  'race_human' : {\r\n    maxHp : 10\r\n  },\r\n  'race_elf' : {\r\n    maxHp : 10\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {{maxHp:number}} Race\r\n * @typedef {Object.<string,Race>} AllRacesState\r\n */\r\n\r\n/**\r\n * @param {AllRacesState} state\r\n * @param {*} action\r\n * @returns {AllRacesState}\r\n */\r\nexport default function (state = initialState, action){\r\n  switch(action.type){\r\n    default : return state\r\n  }\r\n}","export const MESSAGE = 'MESSAGE'\r\n\r\n/**\r\n * @typedef {{type: string, id:string, from: string, message: string}} MessageAction\r\n */\r\n\r\n/**\r\n * @param {string} id\r\n * @param {string} from\r\n * @param {string} message\r\n * @returns {MessageAction}\r\n */\r\nexport function messageAction(id, from, message) {\r\n  return {\r\n    type: MESSAGE,\r\n    id,\r\n    from,\r\n    message\r\n  }\r\n}\r\n\r\nconst initialState = []\r\n\r\n/**\r\n * @typedef {{id:string, from: string, message: string}} Message\r\n * @typedef {Array.<Message>} MessagesState\r\n */\r\n\r\n/**\r\n * @param {undefined | MessagesState} state\r\n * @param {MessageAction} action\r\n * @returns {* | MessagesState}\r\n */\r\nexport default function messagesReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case MESSAGE :\r\n      return state.concat({\r\n        id: action.id,\r\n        from: action.from,\r\n        message: action.message\r\n      })\r\n    default :\r\n      return state\r\n  }\r\n}","import allContextsReducer from './all-contexts-reducer'\r\nimport allActionsReducer from './all-actions-reducer'\r\nimport allClassesReducer from './all-classes-reducer'\r\nimport allRacesReducer from './all-races-reducer'\r\nimport messagesReducer from './messages-reducer'\r\n\r\nconst LOAD_STATE = 'LOAD_STATE'\r\n\r\n/**\r\n * @param {{classes:Array}} state\r\n * @returns {Array}\r\n */\r\nexport function allClassesSelector(state) {\r\n  return state.classes\r\n}\r\n\r\n/**\r\n * @param {{races:Array}} state\r\n * @returns {Array}\r\n */\r\nexport function allRacesSelector(state) {\r\n  return state.races\r\n}\r\n\r\nexport function loadStateAction(state) {\r\n  return {\r\n    type : LOAD_STATE,\r\n    state : state\r\n  }\r\n}\r\n\r\nexport default function rootReducer(state = {}, action) {\r\n  switch (action) {\r\n    case LOAD_STATE :\r\n      return action.state\r\n    default :\r\n      return {\r\n        messages: messagesReducer(state.messages, action),\r\n        actions: allActionsReducer(state.actions, action),\r\n        classes: allClassesReducer(state.classes, action),\r\n        races: allRacesReducer(state.races, action),\r\n        contexts: allContextsReducer(state.contexts, action)\r\n      }\r\n  }\r\n}\r\n","export const BATTLE = 'BATTLE'\r\n\r\n\r\nexport function groupsSelector(state){\r\n  return state.groups\r\n}\r\n\r\nconst initialState = {\r\n  name: 'battle',\r\n  groups:[{\r\n    id:'group1',\r\n    unitrefs: ['orc1', 'orc2'],\r\n  },{\r\n    id:'group2',\r\n    unitrefs: ['orc3','goblin1','goblin2']\r\n  },{\r\n    id:'group3',\r\n    unitrefs:[]\r\n  }],\r\n  units :{\r\n    'orc1' : {\r\n      hp : {\r\n        current: 10,\r\n        max: 10\r\n      }\r\n    },\r\n    'orc2':{\r\n      hp : {\r\n        current: 10,\r\n        max: 10\r\n      }\r\n    },\r\n    'orc3':{\r\n      hp : {\r\n        current: 10,\r\n        max: 10\r\n      }\r\n    },\r\n    'goblin1':{\r\n      hp : {\r\n        current: 10,\r\n        max: 10\r\n      }\r\n    },\r\n    'goblin2':{\r\n      hp : {\r\n        current: 10,\r\n        max: 10\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default function battle(state = initialState, action) {\r\n  switch (action.type) {\r\n    default :\r\n      return state\r\n  }\r\n}","import {contextAction} from '../../model/all-contexts-reducer'\r\nimport {pushClientStateAction, setPlayerNameAction, setPlayerClassIdAction, setPlayerRaceIdAction} from '../../model/context-reducer'\r\nimport {INPUT_QUERY, createInputQuery} from '../../model/states/input-query'\r\nimport {LIST_QUERY, createListQuery} from '../../model/states/list-query'\r\nimport {allClassesSelector, allRacesSelector} from '../../model'\r\nimport {BATTLE} from '../../model/states/battle'\r\n\r\n\r\nexport default {\r\n  onEnter: (getState, dispatch, next, {guid})=>{\r\n    dispatch(contextAction(guid, pushClientStateAction(INPUT_QUERY, createInputQuery({id:'name', query:'Name?'}))))\r\n  },\r\n  onReturn:(getState, dispatch, next, {fromState, guid, returnState}) => {\r\n    const state = getState()\r\n    if(fromState.id === 'name'){\r\n      const allClasses = allClassesSelector(state)\r\n      next(contextAction(guid, setPlayerNameAction(returnState)))\r\n      dispatch(contextAction(guid,pushClientStateAction(LIST_QUERY, createListQuery({id:'class', query:'Class?', options:allClasses}))))\r\n    }\r\n    if(fromState.id === 'class'){\r\n      const allClasses = allClassesSelector(state)\r\n      const allRaces = allRacesSelector(state)\r\n      next(contextAction(guid, setPlayerClassIdAction(allClasses[returnState])))\r\n      dispatch(contextAction(guid,pushClientStateAction(LIST_QUERY, createListQuery({id:'race', query:'Race?',options:allRaces}))))\r\n    }\r\n    if(fromState.id === 'race'){\r\n      const allRaces = allRacesSelector(state)\r\n      next(contextAction(guid, setPlayerRaceIdAction(allRaces[returnState])))\r\n      dispatch(contextAction(guid,pushClientStateAction(BATTLE, {})))\r\n    }\r\n  }\r\n}","//import introduction from './introduction'\r\n//import classSelection from './class-selection'\r\n//import townLobby from './town-lobby'\r\n//import rollDices from './roll-dices'\r\n//import assignDices from './assign-dices'\r\n//import battle from './battle'\r\nimport inputQuery from './input-query'\r\nimport listQuery from './list-query'\r\nimport setup from './setup'\r\n\r\nexport {\r\n  //introduction, classSelection, townLobby, rollDices, assignDices, battle,\r\n  inputQuery, listQuery, setup}","import * as clientStateHandlers from './../states'\r\n\r\nimport {SETUP} from '../../model/states/setup'\r\nimport {getContext, CONTEXT_ACTION, CONTEXT_SPAWNED, contextAction} from '../../model/all-contexts-reducer'\r\nimport {getLastStackStateName, pushClientStateAction, STACK_POP, STACK_PUSH} from '../../model/context-reducer'\r\n\r\nexport default function serverMiddleware({getState, dispatch}) {\r\n  return (next) => (action) => {\r\n    if (action.type === CONTEXT_SPAWNED) {\r\n      const result = next(action)\r\n      if (getContext(getState(), action.guid).length === 0) {\r\n        dispatch(contextAction(action.guid, pushClientStateAction(SETUP, {})))\r\n      }\r\n      return result\r\n    }\r\n    if (action.type === CONTEXT_ACTION) {\r\n      switch (action.action.type) {\r\n        case STACK_PUSH : {\r\n          let fromState = undefined\r\n          if (getContext(getState(), action.guid).length > 0) {\r\n            fromState = getLastStackStateName(getContext(getState(), action.guid))\r\n          }\r\n          const result = next(action.action)\r\n          const name = getLastStackStateName(getContext(getState(), action.guid))\r\n          clientStateHandlers[name].onEnter(getState, dispatch, next, {...action, fromState})\r\n          return result\r\n        }\r\n        case STACK_POP : {\r\n          const fromState = getLastStackStateName(getContext(getState(), action.guid))\r\n          const result = next(action.action)\r\n          if (getContext(getState(), action.guid).length > 0) {\r\n            const name = getLastStackStateName(getContext(getState(), action.guid))\r\n            clientStateHandlers[name].onReturn(getState, dispatch, next, {...action, fromState})\r\n          }\r\n          return result\r\n        }\r\n        default : {\r\n          const name = getLastStackStateName(getContext(getState(), action.guid))\r\n          return clientStateHandlers[name].onAction(getState, dispatch, next, action)\r\n        }\r\n      }\r\n    } else {\r\n      return next(action)\r\n    }\r\n  }\r\n}","export default function shallowEqual(oldState, newState){\r\n  const resultOldToNew = Object.keys(oldState).reduce((result, oldKey) => {\r\n    return result === true ? result : oldState[oldKey] !== newState[oldKey]\r\n  }, false)\r\n\r\n  const resultNewToOld = Object.keys(newState).reduce((result, newKey) => {\r\n    return result === true ? result : oldState[newKey] !== newState[newKey]\r\n  }, false)\r\n\r\n  return !resultNewToOld && !resultOldToNew\r\n}","import {shallowEqual} from '../../utils'\r\nimport log from '../log'\r\nimport {getContext} from '../../model/all-contexts-reducer'\r\n\r\nexport default function serverMiddleware(clientGuidToSocket, {getState}) {\r\n  return (next) => (action) => {\r\n    log.info(`Action ${JSON.stringify(action)}`)\r\n\r\n    const stateBefore = getState()\r\n    const result = next(action)\r\n    const stateAfter = getState()\r\n\r\n    Object.keys(stateAfter.contexts).forEach((key) => {\r\n\r\n      const clientStateBefore = getContext(stateBefore, key)\r\n      const clientStateAfter = getContext(stateAfter, key)\r\n\r\n      const stateChanged = !shallowEqual(clientStateBefore, clientStateAfter)\r\n      const targetSocket = clientGuidToSocket[key]\r\n      if (stateChanged && targetSocket) {\r\n        log.info(`Sending to ${key}`)\r\n        targetSocket.emit('action', action)\r\n      }\r\n\r\n      if (!targetSocket) {\r\n        log.warn(`Client ${key} disconnected and is not receiving state changes`)\r\n      }\r\n    })\r\n    return result\r\n  }\r\n}","import fs from 'fs'\r\nimport path from 'path'\r\nimport serverMiddleware from './middleware/server-middleware'\r\nimport responseMiddleware from './middleware/response-middleware'\r\nimport log from './log'\r\nimport {createStore, applyMiddleware} from 'redux'\r\nimport {contextDespawnedAction, contextSpawnedAction, contextAction} from \"../model/all-contexts-reducer\";\r\nimport rootReducer from 'model'\r\n\r\nconst dataDirPath = path.join(__dirname, 'data')\r\nconst stateFilePath = path.join(__dirname, 'data/state.json')\r\n\r\nconst clientSocketIdToGuid = {}\r\nconst clientGuidToSocket = {}\r\n\r\nif (!fs.existsSync(dataDirPath)){\r\n  fs.mkdirSync(dataDirPath)\r\n}\r\nlet stateStr = '{}'\r\ntry {\r\n  stateStr = fs.readFileSync(stateFilePath, 'utf8')\r\n} catch(e) {\r\n  fs.writeFileSync(stateFilePath, '{}', { flag: 'wx' })\r\n}\r\n\r\nif(stateStr.trim().length === 0) stateStr = '{}'\r\nconst store = createStore(rootReducer, JSON.parse(stateStr), applyMiddleware(serverMiddleware,responseMiddleware.bind(undefined,clientGuidToSocket)))\r\n\r\nstore.subscribe(function persistState(){\r\n  const currentState = store.getState()\r\n  if(currentState === undefined){\r\n    log.warn('Saving empty state.')\r\n  } else {\r\n    fs.writeFileSync(stateFilePath, JSON.stringify(currentState, null, 2))\r\n  }\r\n})\r\n\r\nexport default function onSocket(io, socket){\r\n  const ipAddress = socket.request.connection.remoteAddress\r\n  const clientId = `${ipAddress}`\r\n  log.info(`client ??@${clientId} connected`)\r\n\r\n  socket.on('authentication', function(authToken){\r\n    clientSocketIdToGuid[socket.id] = authToken\r\n    clientGuidToSocket[authToken] = socket\r\n    log.info(`client ??@${clientId} authenticated as ${authToken}`)\r\n    store.dispatch(contextSpawnedAction(authToken))\r\n    socket.emit('initial_state', store.getState())\r\n  })\r\n\r\n  socket.on('disconnect', function() {\r\n    const guid = clientSocketIdToGuid[socket.id]\r\n    log.info(`client ${guid}@${clientId} disconnected`)\r\n    store.dispatch(contextDespawnedAction(guid))\r\n    clientGuidToSocket[guid] = undefined\r\n    clientSocketIdToGuid[socket.id] = undefined\r\n  })\r\n\r\n  socket.on('command_request', function(action){\r\n    const guid = clientSocketIdToGuid[socket.id]\r\n    log.info(`client ${guid}@${clientId} action: ${JSON.stringify(action)}`)\r\n    store.dispatch(contextAction(guid,action))\r\n  })\r\n}\r\n","import express from 'express'\r\nimport path from 'path'\r\nimport http from 'http'\r\nimport socketIO from 'socket.io'\r\n\r\nimport log from './log'\r\nimport serverIO from './server-io'\r\n\r\nconst app = express()\r\nconst host = '0.0.0.0'\r\nconst port = process.env.PORT || 8080\r\n\r\nprocess.env.PWD = process.cwd()\r\n\r\napp.use('/public', express.static(path.join(process.env.PWD, 'public')))\r\n\r\napp.get('/favicon.ico', function(req, res) {\r\n  res.sendFile(path.join(process.env.PWD, 'public/favicon.ico'))\r\n})\r\n\r\napp.get('/', function(req, res) {\r\n  res.sendFile(path.join(process.env.PWD, 'public/index.html'))\r\n})\r\n\r\nconst server = http.createServer(app)\r\nconst io = socketIO(server)\r\n\r\nio.on('connection', serverIO.bind(undefined, io))\r\n\r\nserver.listen(port, host, function(err) {\r\n  if (err) log.error(err)\r\n  else {\r\n    log.info(`Listening at http://${host}:${port}`)\r\n  }\r\n})\r\n"],"names":["winston","require","path","logger","Logger","transports","Console","File","filename","join","__dirname","args","debug","info","warn","error","INPUT_QUERY","QUERY_RESPONSE","createInputQuery","id","query","initialState","introduction","state","action","type","LIST_QUERY","LIST_QUERY_RESPONSE","optionsSelector","options","createListQuery","SETUP","PLAYER_NAME_SET","CLASS_ID_SET","RACE_ID_SET","STACK_PUSH","STACK_POP","STACK_ACTION","setPlayerNameAction","playerName","setPlayerClassIdAction","classId","setPlayerRaceIdAction","raceId","pushClientStateAction","name","popClientStateAction","returnState","getLastStackState","stack","length","getLastStackStateName","contextReducer","clientStateReducers","allClientStateReducers","slice","topAction","concat","CONTEXT_SPAWNED","CONTEXT_DESPAWNED","CONTEXT_ACTION","contextAction","guid","contextSpawnedAction","contextDespawnedAction","getContext","contexts","allContextsReducer","getState","dispatch","next","message","option","MESSAGE","messagesReducer","from","LOAD_STATE","allClassesSelector","classes","allRacesSelector","races","rootReducer","messages","allActionsReducer","actions","allClassesReducer","allRacesReducer","BATTLE","fromState","allClasses","allRaces","serverMiddleware","result","undefined","onEnter","onReturn","clientStateHandlers","onAction","shallowEqual","oldState","newState","resultOldToNew","Object","keys","reduce","oldKey","resultNewToOld","newKey","clientGuidToSocket","JSON","stringify","stateBefore","stateAfter","forEach","key","clientStateBefore","clientStateAfter","stateChanged","targetSocket","emit","dataDirPath","stateFilePath","clientSocketIdToGuid","fs","existsSync","mkdirSync","stateStr","readFileSync","e","writeFileSync","flag","trim","store","createStore","parse","applyMiddleware","responseMiddleware","bind","subscribe","persistState","currentState","onSocket","io","socket","ipAddress","request","connection","remoteAddress","clientId","on","authToken","app","express","host","port","process","env","PORT","PWD","cwd","use","static","get","req","res","sendFile","server","http","createServer","socketIO","serverIO","listen","err","log"],"mappings":"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"}