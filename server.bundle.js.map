{"version":3,"file":null,"sources":["src/server/log.js","src/model/states/input-query.js","src/model/states/list-query.js","src/model/states/setup.js","src/model/states/index.js","src/model/context-reducer.js","src/model/all-contexts-reducer.js","src/server/states/input-query.js","src/model/all-actions-reducer.js","src/model/all-classes-reducer.js","src/model/all-races-reducer.js","src/model/messages-reducer.js","src/model/stack-reducer.js","src/model/game-reducer.js","src/model/index.js","src/server/states/list-query.js","src/model/states/battle.js","src/server/states/setup.js","src/server/states/init.js","src/server/states/index.js","src/server/middleware/server-middleware.js","src/utils/shallow-equal.js","src/server/middleware/response-middleware.js","src/server/server-io.js","src/server/index.js"],"sourcesContent":["const winston = require('winston')\r\nconst path = require('path')\r\n\r\nconst pwd = process.env.PWD || process.cwd()\r\n\r\nconst logger = new (winston.Logger)({\r\n  transports: [\r\n    new (winston.transports.Console)(),\r\n    new (winston.transports.File)({ filename: path.join(pwd, 'data/server.log')})\r\n  ]\r\n})\r\n\r\nexport default {\r\n  debug(...args){\r\n    logger.debug(...args)\r\n  },\r\n  info(...args){\r\n    logger.info(...args)\r\n  },\r\n  warn(...args){\r\n    logger.warn(...args)\r\n  },\r\n  error(...args){\r\n    logger.error(...args)\r\n  }\r\n}","export const INPUT_QUERY = 'inputQuery'\r\n\r\nexport const QUERY_RESPONSE = 'INPUT_QUERY:QUERY_RESPONSE'\r\n\r\n/**\r\n * @typedef {{type: string, message: string}} ResponseAction\r\n */\r\n\r\n/**\r\n * @param {string} message\r\n * @returns ResponseAction\r\n */\r\nexport function queryResponseAction(message){\r\n  return {\r\n    type: QUERY_RESPONSE,\r\n    message\r\n  }\r\n}\r\n\r\n/**\r\n * @param {{id:string}} state\r\n * @returns string\r\n */\r\nexport function idSelector(state){\r\n  return state.id\r\n}\r\n\r\n/**\r\n * @param {{query:string}} state\r\n * @returns string\r\n */\r\nexport function querySelector(state){\r\n  return state.query\r\n}\r\n\r\n/**\r\n * @typedef {{name: string, id: string, query: string}} InputQuery\r\n */\r\n\r\n/**\r\n * @param {string} id\r\n * @param {string} query\r\n * @returns InputQuery\r\n */\r\nexport function createInputQuery({id = '', query = ''}) {\r\n  return {\r\n    name: INPUT_QUERY,\r\n    id,\r\n    query\r\n  }\r\n}\r\n\r\nconst initialState = createInputQuery({id:'', query:''})\r\n\r\n/**\r\n * @typedef {{name:string, id:string, query:string}} InputQueryState\r\n */\r\n\r\n/**\r\n * @param {InputQueryState} state\r\n * @param {*} action\r\n * @returns {* | InputQueryState}\r\n */\r\nexport default function introduction(state = initialState, action) {\r\n  switch (action.type) {\r\n    default :\r\n      return state\r\n  }\r\n}","export const LIST_QUERY = 'listQuery'\r\n\r\nexport const LIST_QUERY_RESPONSE = 'LIST_QUERY:LIST_QUERY_RESPONSE'\r\n\r\n/**\r\n * @param {number} option\r\n * @returns {{type: string, option: number}}\r\n */\r\nexport function listQueryResponseAction(option){\r\n  return {\r\n    type: LIST_QUERY_RESPONSE,\r\n    option\r\n  }\r\n}\r\n\r\n/**\r\n * @param {{id:string}} state\r\n * @returns string\r\n */\r\nexport function idSelector(state){\r\n  return state.id\r\n}\r\n\r\n/**\r\n * @param {{query:string}} state\r\n * @return string\r\n */\r\nexport function querySelector(state){\r\n  return state.query\r\n}\r\n\r\n/**\r\n * @param {{options:Array}} state\r\n * returns Array\r\n */\r\nexport function optionsSelector(state){\r\n  return state.options\r\n}\r\n\r\n/**\r\n * @typedef {{name: string, id: string, query: string, options: Array}} ListQuery\r\n */\r\n\r\n/**\r\n * @param {string} id\r\n * @param {string} query\r\n * @param {Array} options\r\n * @returns ListQuery\r\n */\r\nexport function createListQuery({id = 'none', query = 'none', options = []}) {\r\n  return {\r\n    name: LIST_QUERY,\r\n    id,\r\n    query,\r\n    options\r\n  }\r\n}\r\n\r\nconst initialState = createListQuery({id:'',query:'', options:[]})\r\n\r\n/**\r\n * @typedef {{name:string, id:string, query:string, options:Array}} ListQueryState\r\n */\r\n\r\n/**\r\n * @param {ListQueryState} state\r\n * @param {*} action\r\n * @returns {* | ListQueryState}\r\n */\r\nexport default function introduction(state = initialState, action) {\r\n  switch (action.type) {\r\n    default :\r\n      return state\r\n  }\r\n}","export const SETUP = 'setup'\r\n\r\n\r\nconst initialState = {\r\n  name: SETUP\r\n}\r\n\r\nexport function createSetup() {\r\n  return {\r\n    name: SETUP\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {{\r\n *          name:string}} SetupState\r\n */\r\n\r\n/**\r\n * @param {undefined | SetupState} state\r\n * @param { Action | PlayerNameAction | PlayerClassIdAction | PlayerRaceIdAction } action\r\n * @returns {* | SetupState}\r\n */\r\nexport default function introduction(state = initialState, action) {\r\n  switch (action.type) {\r\n    default :\r\n      return state\r\n  }\r\n}","//import rollDices from './roll-dices'\r\n//import introduction from './introduction'\r\n//import classSelection from './class-selection'\r\n//import townLobby from './town-lobby'\r\n//import assignDices from './assign-dices'\r\n//import battle from './battle'\r\nimport inputQuery from './input-query'\r\nimport listQuery from './list-query'\r\nimport setup from './setup'\r\n\r\nexport {\r\n  //rollDices, introduction, classSelection, townLobby, assignDices, battle,\r\ninputQuery, listQuery,setup}","import * as allClientStateReducers from './states'\r\n\r\nexport const PLAYER_NAME_SET = 'PLAYER_NAME_SET'\r\nexport const CLASS_ID_SET = 'CLASS_ID_SET'\r\nexport const RACE_ID_SET = 'RACE_ID_SET'\r\nexport const STACK_PUSH = 'STACK_PUSH'\r\nexport const STACK_POP = 'STACK_POP'\r\nexport const STACK_ACTION = 'STACK_ACTION'\r\n\r\n/**\r\n * @typedef {{type: string, playerName: string}} PlayerNameAction\r\n */\r\n\r\n/**\r\n * @param {string} playerName\r\n * @returns PlayerNameAction\r\n */\r\nexport function setPlayerNameAction(playerName) {\r\n  return {\r\n    type: PLAYER_NAME_SET,\r\n    playerName: playerName\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {{type: string, classId: string}} PlayerClassIdAction\r\n */\r\n\r\n/**\r\n * @param {string} classId\r\n * @returns PlayerClassIdAction\r\n */\r\nexport function setPlayerClassIdAction(classId) {\r\n  return {\r\n    type: CLASS_ID_SET,\r\n    classId: classId\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {{type: string, raceId: string}} PlayerRaceIdAction\r\n */\r\n\r\n/**\r\n * @param {string} raceId\r\n * @returns PlayerRaceIdAction\r\n */\r\nexport function setPlayerRaceIdAction(raceId) {\r\n  return {\r\n    type: RACE_ID_SET,\r\n    raceId: raceId\r\n  }\r\n}\r\n\r\n/**\r\n * @param action wrapped action\r\n * @returns {{type: string, action: Object}}\r\n */\r\nexport function stackAction(action){\r\n  return {\r\n    type : STACK_ACTION,\r\n    action : action\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {{type: string, name: string, initialState: *}} PushClientStateAction\r\n */\r\n\r\n/**\r\n * @param {string} name\r\n * @param {*} initialState\r\n * @returns {{type: string, name: string, initialState: *}}\r\n */\r\nexport function pushClientStateAction(name, initialState){\r\n  return {\r\n    type: STACK_PUSH ,\r\n    name: name,\r\n    initialState : initialState\r\n  }\r\n}\r\n\r\nexport function popClientStateAction(returnState) {\r\n  return {\r\n    type: STACK_POP,\r\n    returnState : returnState\r\n  }\r\n}\r\n\r\n/**\r\n * @param {{classId:string}} state\r\n * @returns {string}\r\n */\r\nexport function getClassId(state) {\r\n  return state.classId\r\n}\r\n\r\n/**\r\n * @param {{stack:Array}} state\r\n * @returns {Array}\r\n */\r\nexport function getStack(state) {\r\n  return state ? state.stack : []\r\n}\r\n\r\n/**\r\n * @param {{playerName:string}} state\r\n * @returns {string}\r\n */\r\nexport function getPlayerName(state) {\r\n  return state.playerName\r\n}\r\n\r\n/**\r\n * @param {{stack:Array}} state\r\n * @returns {Object||undefined}\r\n */\r\nexport function getLastStackState(state){\r\n  return state.stack[state.stack.length - 1]\r\n}\r\n\r\n/**\r\n * @param {{stack:Array.<{name}>}} state\r\n */\r\nexport function getLastStackStateName(state){\r\n  const lastStackState = getLastStackState(state)\r\n  return lastStackState ? lastStackState.name : undefined\r\n}\r\n\r\n/**\r\n * @param {{stack:Array.<{name}>}} state\r\n * @param {string} name\r\n * @returns {Object}\r\n */\r\nexport function getStackStateWithName(state, name){\r\n  return state.stack.find(s => s.name === name)\r\n}\r\n\r\nconst initialState = {\r\n  playerName: 'Noname',\r\n  classId: 'mage',\r\n  raceId: 'none',\r\n  actions: [],\r\n  stack : []\r\n}\r\n\r\n/**\r\n * @typedef {{playerName: string, classId: string, raceId: string, actions: Array, stack: Array}} Context\r\n */\r\n\r\n/**\r\n * @param {Context} state\r\n * @param {PlayerNameAction|PlayerClassIdAction|PlayerRaceIdAction|PushClientStateAction} action\r\n * @param clientStateReducers\r\n * @returns {Context}\r\n */\r\nexport default function contextReducer(state = initialState, action, clientStateReducers = allClientStateReducers){\r\n  switch (action.type){\r\n    case PLAYER_NAME_SET :\r\n      return {\r\n        ...state,\r\n        playerName: action.playerName\r\n      }\r\n    case CLASS_ID_SET :\r\n      return {\r\n        ...state,\r\n        classId: action.classId\r\n      }\r\n    case RACE_ID_SET :\r\n      return {\r\n        ...state,\r\n        raceId: action.raceId\r\n      }\r\n    case STACK_PUSH :\r\n      return {\r\n        ...state,\r\n        stack : [...state.stack, clientStateReducers[action.name](action.initialState, {type: '@INIT@'})]\r\n      }\r\n    case STACK_POP :\r\n      return {\r\n        ...state,\r\n        stack: state.stack.slice(0, state.stack.length - 1)\r\n      }\r\n    case STACK_ACTION : {\r\n        const topAction = state.stack[state.stack.length-1]\r\n        if(topAction){\r\n          return {\r\n              ...state,\r\n              stack: state.stack.slice(0, state.stack.length - 1).concat(clientStateReducers[topAction.name](topAction, action.action))\r\n          }\r\n        }\r\n        return state\r\n    }\r\n    default : return state\r\n  }\r\n}","import contextReducer from './context-reducer'\r\n\r\nexport const CONTEXT_SPAWNED = 'CONTEXT_SPAWNED'\r\nexport const CONTEXT_DESPAWNED = 'CONTEXT_DESPAWNED'\r\nexport const CONTEXT_ACTION = 'CONTEXT_ACTION'\r\n\r\nexport function contextAction(guid, action){\r\n  return {\r\n    type : CONTEXT_ACTION,\r\n    guid : guid,\r\n    action : action\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string} guid\r\n * @returns {{type: string, guid: string|undefined}}\r\n */\r\nexport function contextSpawnedAction(guid) {\r\n  return {\r\n    type: CONTEXT_SPAWNED,\r\n    guid: guid\r\n  }\r\n}\r\n\r\nexport function contextDespawnedAction(guid){\r\n  return {\r\n    type: CONTEXT_DESPAWNED,\r\n    guid: guid\r\n  }\r\n}\r\n\r\nexport default function allContextsReducer(state = {}, action){\r\n  switch(action.type){\r\n    case CONTEXT_SPAWNED: return {...state, [action.guid]: contextReducer(state[action.guid], action)}\r\n    case CONTEXT_DESPAWNED: return {...state, [action.guid]: contextReducer(state[action.guid], action)}\r\n    case CONTEXT_ACTION: return {...state, [action.guid]: contextReducer(state[action.guid], action.action)}\r\n    default : return state\r\n  }\r\n}\r\n\r\n","import {contextAction} from '../../model/all-contexts-reducer'\r\nimport {QUERY_RESPONSE} from '../../model/states/input-query'\r\nimport {popClientStateAction} from '../../model/context-reducer'\r\n\r\nexport default {\r\n  onEnter: (getState, dispatch, next, {guid})=>{},\r\n  onAction:(getState, dispatch, next, {action, guid})=>{\r\n    switch(action.type){\r\n      case QUERY_RESPONSE: {\r\n        next(contextAction(guid,action))\r\n        dispatch(contextAction(guid,popClientStateAction(action.message)))\r\n      }\r\n    }\r\n  }\r\n}","export const initialState = {\r\n  'action_shield': {\r\n    slots: [{\r\n      require: 1\r\n    }]\r\n  },\r\n  'action_maneuver': {\r\n    slots: [{\r\n      require: 3\r\n    }]\r\n  },\r\n  'action_throw': {\r\n    slots: [{\r\n      require: 6\r\n    }]\r\n  },\r\n  'action_fireball': {\r\n    slots: [\r\n      {\r\n        require: 5\r\n      },\r\n      {\r\n        require: 6\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {{require:number}} Slot\r\n * @typedef {{slots:Array.<Slot>}} Action\r\n * @typedef {Object.<string, Action>} AllActionState\r\n */\r\n\r\n/**\r\n * @param {AllActionState} state\r\n * @param {*} action\r\n * @returns {AllActionState}\r\n */\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    default :\r\n      return state\r\n  }\r\n}","export const initialState = {\r\n  'class_mage' : {\r\n    actions : ['action_shield','action_maneuver', 'action_throw', 'action_fireball']\r\n  },\r\n  'class_druid' : {\r\n    actions : ['action_shield','action_maneuver', 'action_throw', 'action_fireball']\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {{actions:Array.<string>}} Class\r\n * @typedef {Object.<string,Class>} AllClassesState\r\n */\r\n\r\n/**\r\n * @param {AllClassesState} state\r\n * @param {*} action\r\n * @returns {AllClassesState}\r\n */\r\nexport default function (state = initialState, action){\r\n  switch(action.type){\r\n    default : return state\r\n  }\r\n}","export const initialState = {\r\n  'race_human' : {\r\n    maxHp : 10\r\n  },\r\n  'race_elf' : {\r\n    maxHp : 10\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {{maxHp:number}} Race\r\n * @typedef {Object.<string,Race>} AllRacesState\r\n */\r\n\r\n/**\r\n * @param {AllRacesState} state\r\n * @param {*} action\r\n * @returns {AllRacesState}\r\n */\r\nexport default function (state = initialState, action){\r\n  switch(action.type){\r\n    default : return state\r\n  }\r\n}","export const MESSAGE = 'MESSAGE'\r\n\r\n/**\r\n * @typedef {{type: string, id:string, from: string, message: string}} MessageAction\r\n */\r\n\r\n/**\r\n * @param {string} id\r\n * @param {string} from\r\n * @param {string} message\r\n * @returns {MessageAction}\r\n */\r\nexport function messageAction(id, from, message) {\r\n  return {\r\n    type: MESSAGE,\r\n    id,\r\n    from,\r\n    message\r\n  }\r\n}\r\n\r\nconst initialState = []\r\n\r\n/**\r\n * @typedef {{id:string, from: string, message: string}} Message\r\n * @typedef {Array.<Message>} MessagesState\r\n */\r\n\r\n/**\r\n * @param {undefined | MessagesState} state\r\n * @param {MessageAction} action\r\n * @returns {* | MessagesState}\r\n */\r\nexport default function messagesReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case MESSAGE :\r\n      return state.concat({\r\n        id: action.id,\r\n        from: action.from,\r\n        message: action.message\r\n      })\r\n    default :\r\n      return state\r\n  }\r\n}","import minimatch from 'minimatch'\r\n\r\nexport const nextState = (id, data = {}) => {\r\n  return {stateId: id, ...data}\r\n}\r\n\r\nexport const path = (stack) => {\r\n  return stack.map(s => s.stateId).join('/')\r\n}\r\n\r\nexport const head = (stack) => {\r\n  return stack.length && stack[stack.length - 1]\r\n}\r\n\r\nexport const push = (stack, ...state) => {\r\n  return [...stack, ...state]\r\n}\r\n\r\nexport const pop = (stack) => {\r\n  return stack.slice(0, stack.length - 1)\r\n}\r\n\r\nexport const splitHead = (stack) => {\r\n  return stack.length > 0 ? [stack.slice(0, stack.length - 1), stack[stack.length - 1]] : [[], undefined]\r\n}\r\n\r\nexport const splitLastTwo = (stack) => {\r\n  const [rest, head] = splitHead(stack)\r\n  return [...splitHead(rest), head]\r\n}\r\n\r\nexport const match = (path, query) => {\r\n  return minimatch(path, query)\r\n}\r\n\r\nexport const createStackReducer = reducersMap => (state = [], action) => {\r\n  let prevState = undefined\r\n  let MAX_ITER = 99\r\n  let iter = 0\r\n  while (true) {\r\n    if (prevState === state) return state\r\n    if (iter > MAX_ITER) throw Error('Max Iteration reached, probably loop')\r\n    ++iter\r\n    prevState = state\r\n    state = Object.keys(reducersMap).reduce((acc, query) => match(path(state), query) ? reducersMap[query](acc, action) : acc, state)\r\n  }\r\n}","import {createStackReducer, nextState, push, splitHead} from './stack-reducer'\r\n\r\nconst playerSetupReducer = createStackReducer({})\r\n\r\n\r\nconst PLAYER_JOIN = 'PLAYER_JOIN'\r\nexport const joinPlayer = (playerId) => {\r\n  return {\r\n    type: PLAYER_JOIN,\r\n    playerId\r\n  }\r\n}\r\n\r\nconst PLAYER_ACTION = 'PLAYER_ACTION'\r\nexport const playerAction = (playerId, wrappedAction) => {\r\n  return {\r\n    type: PLAYER_ACTION,\r\n    playerId,\r\n    wrappedAction\r\n  }\r\n}\r\n\r\nconst GAME_START = 'GAME_START'\r\nexport const startGame = ()=>{\r\n  return {\r\n    type: GAME_START\r\n  }\r\n}\r\n\r\nexport const gameReducer = createStackReducer({\r\n  '': (stack, action) => push(stack, nextState('join'), {players: {}}),\r\n\r\n  'join': (stack, action) => {\r\n    switch (action.type) {\r\n      case PLAYER_JOIN: {\r\n        const [tail, head] = splitHead(stack)\r\n        return [...tail, {...head, players: {...head.players, [action.playerId]: []}}]\r\n      }\r\n      case PLAYER_ACTION: {\r\n        const [tail, head] = splitHead(stack)\r\n        return [...tail, {\r\n          ...head,\r\n          players: {\r\n            ...head.players,\r\n            [action.playerId]: playerSetupReducer(head.players[action.playerId], action.wrappedAction)\r\n          }\r\n        }]\r\n      }\r\n      case 'GAME_START': {\r\n        const [tail, head] = splitHead(stack)\r\n        return [...tail, nextState('play', {players: head.players})]\r\n      }\r\n      default: return stack\r\n    }\r\n  },\r\n\r\n  'play': (stack, action) => {\r\n\r\n  }\r\n})","/**\r\n * @param {{classes:Array}} state\r\n * @returns {Array}\r\n */\r\nimport allContextsReducer from './all-contexts-reducer'\r\nimport allActionsReducer from './all-actions-reducer'\r\nimport allClassesReducer from './all-classes-reducer'\r\nimport allRacesReducer from './all-races-reducer'\r\nimport messagesReducer from './messages-reducer'\r\nimport {gameReducer} from './game-reducer'\r\n\r\nconst LOAD_STATE = 'LOAD_STATE'\r\n\r\nexport function allClassesSelector(state) {\r\n  return state.classes\r\n}\r\n\r\n/**\r\n * @param {{races:Array}} state\r\n * @returns {Array}\r\n */\r\nexport function allRacesSelector(state) {\r\n  return state.races\r\n}\r\n\r\nexport function loadStateAction(state) {\r\n  return {\r\n    type : LOAD_STATE,\r\n    state : state\r\n  }\r\n}\r\n\r\n/**\r\n * @param state\r\n * @param guid\r\n * @returns {Context}\r\n */\r\nexport function getContext(state, guid){\r\n  return state.contexts[guid]\r\n}\r\n\r\nexport default function rootReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case LOAD_STATE :\r\n      return action.state\r\n    default :\r\n      return {\r\n        stack: gameReducer(state.stack, action)\r\n        //messages: messagesReducer(state.messages, action),\r\n        //actions: allActionsReducer(state.actions, action),\r\n        //classes: allClassesReducer(state.classes, action),\r\n        //races: allRacesReducer(state.races, action),\r\n        //contexts: allContextsReducer(state.contexts, action)\r\n      }\r\n  }\r\n}\r\n","import {contextAction} from '../../model/all-contexts-reducer'\r\nimport {getLastStackState, popClientStateAction} from '../../model/context-reducer'\r\nimport {LIST_QUERY_RESPONSE, optionsSelector} from '../../model/states/list-query'\r\nimport {getContext} from '../../model/index'\r\n\r\nexport default {\r\n  onAction: (getState, dispatch, next, {action, guid}) => {\r\n    switch (action.type) {\r\n      case LIST_QUERY_RESPONSE: {\r\n        const state = getState()\r\n        const options = optionsSelector(getLastStackState(getContext(state, guid)))\r\n        if (action.option >= 0 && action.option < options.length) {\r\n          next(contextAction(guid, action))\r\n          dispatch(contextAction(guid, popClientStateAction(options[action.option])))\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","export const BATTLE = 'BATTLE'\r\n\r\n\r\nexport function groupsSelector(state){\r\n  return state.groups\r\n}\r\n\r\nconst initialState = {\r\n  name: 'battle',\r\n  groups:[{\r\n    id:'group1',\r\n    unitrefs: ['orc1', 'orc2'],\r\n  },{\r\n    id:'group2',\r\n    unitrefs: ['orc3','goblin1','goblin2']\r\n  },{\r\n    id:'group3',\r\n    unitrefs:[]\r\n  }],\r\n  units :{\r\n    'orc1' : {\r\n      hp : {\r\n        current: 10,\r\n        max: 10\r\n      }\r\n    },\r\n    'orc2':{\r\n      hp : {\r\n        current: 10,\r\n        max: 10\r\n      }\r\n    },\r\n    'orc3':{\r\n      hp : {\r\n        current: 10,\r\n        max: 10\r\n      }\r\n    },\r\n    'goblin1':{\r\n      hp : {\r\n        current: 10,\r\n        max: 10\r\n      }\r\n    },\r\n    'goblin2':{\r\n      hp : {\r\n        current: 10,\r\n        max: 10\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default function battle(state = initialState, action) {\r\n  switch (action.type) {\r\n    default :\r\n      return state\r\n  }\r\n}","import {contextAction} from '../../model/all-contexts-reducer'\r\nimport {pushClientStateAction, setPlayerNameAction, setPlayerClassIdAction, setPlayerRaceIdAction} from '../../model/context-reducer'\r\nimport {INPUT_QUERY, createInputQuery} from '../../model/states/input-query'\r\nimport {LIST_QUERY, createListQuery} from '../../model/states/list-query'\r\nimport {allClassesSelector, allRacesSelector} from '../../model'\r\nimport {BATTLE} from '../../model/states/battle'\r\n\r\n\r\nexport default {\r\n  onEnter: (getState, dispatch, next, {guid})=>{\r\n    dispatch(contextAction(guid, pushClientStateAction(INPUT_QUERY, createInputQuery({id:'name', query:'Name?'}))))\r\n  },\r\n  onReturn:(getState, dispatch, next, {fromState, guid, returnState}) => {\r\n    const state = getState()\r\n    if(fromState === 'name'){\r\n      const allClasses = allClassesSelector(state)\r\n      next(contextAction(guid, setPlayerNameAction(returnState)))\r\n      dispatch(contextAction(guid,pushClientStateAction(LIST_QUERY, createListQuery({id:'class', query:'Class?', options:allClasses}))))\r\n    }\r\n    if(fromState === 'class'){\r\n      const allClasses = allClassesSelector(state)\r\n      const allRaces = allRacesSelector(state)\r\n      next(contextAction(guid, setPlayerClassIdAction(allClasses[returnState])))\r\n      dispatch(contextAction(guid,pushClientStateAction(LIST_QUERY, createListQuery({id:'race', query:'Race?',options:allRaces}))))\r\n    }\r\n    if(fromState === 'race'){\r\n      const allRaces = allRacesSelector(state)\r\n      next(contextAction(guid, setPlayerRaceIdAction(allRaces[returnState])))\r\n      dispatch(contextAction(guid,pushClientStateAction(BATTLE, {})))\r\n    }\r\n  }\r\n}","import {contextAction} from '../../model/all-contexts-reducer'\r\nimport {pushClientStateAction} from '../../model/context-reducer'\r\nimport {loadStateAction} from '../../model/index'\r\nimport {createSetup, SETUP} from '../../model/states/setup'\r\n\r\n\r\nexport default {\r\n  onEnter: (getState, dispatch, next, {guid})=>{\r\n    next(contextAction(guid,loadStateAction(getState())))\r\n    dispatch(contextAction(guid,pushClientStateAction(SETUP, createSetup())))\r\n  },\r\n  onReturn:(getState, dispatch, next, {fromState, guid, returnState}) => {\r\n    //game ended\r\n  }\r\n}","//import introduction from './introduction'\r\n//import classSelection from './class-selection'\r\n//import townLobby from './town-lobby'\r\n//import rollDices from './roll-dices'\r\n//import assignDices from './assign-dices'\r\n//import battle from './battle'\r\nimport inputQuery from './input-query'\r\nimport listQuery from './list-query'\r\nimport setup from './setup'\r\nimport init from './init'\r\n\r\nexport {\r\n  //introduction, classSelection, townLobby, rollDices, assignDices, battle,\r\n  init,\r\n  inputQuery, listQuery, setup}","import * as clientStateHandlers from './../states'\r\n\r\nimport {SETUP} from '../../model/states/setup'\r\nimport {CONTEXT_ACTION, CONTEXT_SPAWNED, contextAction} from '../../model/all-contexts-reducer'\r\nimport {\r\n  getLastStackState,\r\n  getLastStackStateName, getStack, pushClientStateAction, STACK_POP,\r\n  STACK_PUSH\r\n} from '../../model/context-reducer'\r\nimport log from '../log'\r\nimport {getContext} from '../../model/index'\r\n\r\nexport default function serverMiddleware({getState, dispatch}) {\r\n  return (next) => (action) => {\r\n    if (action.type === CONTEXT_SPAWNED) {\r\n      if (getStack(getContext(getState(), action.guid)).length === 0) {\r\n        const result = next(action)\r\n        clientStateHandlers['init'].onEnter(getState, dispatch, next, {...action, fromState: 'none'})\r\n        return result\r\n      }\r\n    }\r\n    if (action.type === CONTEXT_ACTION) {\r\n      switch (action.action.type) {\r\n        case STACK_PUSH : {\r\n          let fromState = undefined\r\n          if (getStack(getContext(getState(), action.guid)).length > 0) {\r\n            fromState = getLastStackStateName(getContext(getState(), action.guid))\r\n          }\r\n          const result = next(action)\r\n          const name = getLastStackStateName(getContext(getState(), action.guid))\r\n          clientStateHandlers[name].onEnter(getState, dispatch, next, {...action, fromState})\r\n          return result\r\n        }\r\n        case STACK_POP : {\r\n          const fromState = getLastStackState(getContext(getState(), action.guid))\r\n          const result = next(action)\r\n          const stack = getStack(getContext(getState(), action.guid))\r\n          if (stack.length > 0) {\r\n            const name = getLastStackStateName(getContext(getState(), action.guid))\r\n            clientStateHandlers[name].onReturn(getState, dispatch, next, {...action.action, fromState, guid: action.guid})\r\n          }\r\n          return result\r\n        }\r\n        default : {\r\n          const name = getLastStackStateName(getContext(getState(), action.guid))\r\n          const handler = clientStateHandlers[name]\r\n          if(handler){\r\n            handler.onAction(getState, dispatch, next, action)\r\n          } else {\r\n            log.warn(`Couldn't find action handler '${name}' for processing:`, action)\r\n          }\r\n          return\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","/**\r\n * Compares two object using Object.keys shallowly.\r\n *\r\n * @param {Object|undefined} oldState\r\n * @param {Object|undefined} newState\r\n * @returns {boolean} true if passed objects are shallowly equal, false otherwise\r\n */\r\nexport default function shallowEqual(oldState = {}, newState = {}) {\r\n  const resultOldToNew = Object.keys(oldState).reduce((result, oldKey) => {\r\n    return result === true ? result : oldState[oldKey] !== newState[oldKey]\r\n  }, false)\r\n\r\n  const resultNewToOld = Object.keys(newState).reduce((result, newKey) => {\r\n    return result === true ? result : oldState[newKey] !== newState[newKey]\r\n  }, false)\r\n\r\n  return !resultNewToOld && !resultOldToNew\r\n}","import {shallowEqual} from '../../utils'\r\nimport log from '../log'\r\n\r\nexport default function serverMiddleware(clientGuidToSocket,getControllerSocket, {getState}) {\r\n  return (next) => (action) => {\r\n    log.info(`Action ${JSON.stringify(action)}`)\r\n\r\n    const stateBefore = getState()\r\n    const result = next(action)\r\n    const stateAfter = getState()\r\n\r\n    const stateChanged = !shallowEqual(stateBefore, stateAfter)\r\n    if(stateChanged){\r\n      Object.keys(stateAfter.contexts).forEach((key) => {\r\n\r\n        const targetSocket = clientGuidToSocket[key]\r\n        if (targetSocket) {\r\n          log.info(`Sending to ${key} action: ${JSON.stringify(action)}`)\r\n          targetSocket.emit('action', action)\r\n        } else {\r\n          log.warn(`Client ${key} disconnected and is not receiving state changes`)\r\n        }\r\n      })\r\n    }\r\n    getControllerSocket().emit('state-action', {\r\n      state: stateAfter,\r\n      action : action\r\n    })\r\n    return result\r\n  }\r\n}","import fs from 'fs'\r\nimport path from 'path'\r\nimport serverMiddleware from './middleware/server-middleware'\r\nimport responseMiddleware from './middleware/response-middleware'\r\nimport log from './log'\r\nimport {createStore, applyMiddleware} from 'redux'\r\nimport {contextDespawnedAction, contextSpawnedAction, contextAction} from '../model/all-contexts-reducer';\r\nimport rootReducer from '../model'\r\nimport {loadStateAction} from '../model/index'\r\n\r\nconst pwd = process.env.PWD || process.cwd()\r\n\r\nconst dataDirPath = path.join(pwd, 'data')\r\nconst stateFilePath = path.join(pwd, 'data/state.json')\r\n\r\nconst clientSocketIdToGuid = {}\r\nconst clientGuidToSocket = {}\r\n\r\nlet controllerSocket = undefined;\r\n\r\nif (!fs.existsSync(dataDirPath)){\r\n  fs.mkdirSync(dataDirPath)\r\n}\r\nlet stateStr = '{}'\r\ntry {\r\n  stateStr = fs.readFileSync(stateFilePath, 'utf8')\r\n} catch(e) {\r\n  fs.writeFileSync(stateFilePath, '{}', { flag: 'wx' })\r\n}\r\n\r\nif(stateStr.trim().length === 0) stateStr = '{}'\r\nconst store = createStore(rootReducer, JSON.parse(stateStr), applyMiddleware(serverMiddleware,responseMiddleware.bind(undefined,clientGuidToSocket, ()=>controllerSocket)))\r\n\r\nstore.subscribe(function persistState(){\r\n  const currentState = store.getState()\r\n  if(currentState === undefined){\r\n    log.warn('Saving empty state.')\r\n  } else {\r\n    try {\r\n      fs.writeFileSync(stateFilePath, JSON.stringify(currentState, null, 2))\r\n      log.info('State Saved to', stateFilePath)\r\n    } catch(e){\r\n      log.error('Error while saving state',e.message)\r\n    }\r\n  }\r\n})\r\n\r\nexport default function onSocket(io, socket){\r\n  const ipAddress = socket.request.connection.remoteAddress\r\n  const clientId = `${ipAddress}`\r\n  log.info(`client ??@${clientId} connected`)\r\n\r\n  socket.on('authentication', function(guid){\r\n    clientSocketIdToGuid[socket.id] = guid\r\n    clientGuidToSocket[guid] = socket\r\n    log.info(`client ??@${clientId} authenticated as ${guid}`)\r\n    socket.emit('state_sync', store.getState());\r\n    store.dispatch(contextSpawnedAction(guid))\r\n  })\r\n\r\n  socket.on('disconnect', function() {\r\n    const guid = clientSocketIdToGuid[socket.id]\r\n    log.info(`client ${guid}@${clientId} disconnected`)\r\n    store.dispatch(contextDespawnedAction(guid))\r\n    clientGuidToSocket[guid] = undefined\r\n    clientSocketIdToGuid[socket.id] = undefined\r\n  })\r\n\r\n  socket.on('command_request', function(action){\r\n    const guid = clientSocketIdToGuid[socket.id]\r\n    log.info(`client ${guid}@${clientId} action: ${JSON.stringify(action)}`)\r\n    store.dispatch(contextAction(guid,action))\r\n  })\r\n\r\n  socket.on('controller-connect', ()=>{\r\n    controllerSocket = socket;\r\n    controllerSocket.emit('state-sync', store.getState())\r\n  })\r\n}\r\n","//import 'source-map-support/register'\r\nimport express from 'express'\r\nimport path from 'path'\r\nimport http from 'http'\r\nimport socketIO from 'socket.io'\r\n\r\nimport log from './log'\r\nimport serverIO from './server-io'\r\n\r\nconst app = express()\r\nconst host = '0.0.0.0'\r\nconst port = process.env.PORT || 8080\r\n\r\nconst pwd = process.env.PWD || process.cwd()\r\n\r\napp.use('/public', express.static(path.join(pwd, 'public')))\r\n\r\napp.get('/favicon.ico', function(req, res) {\r\n  res.sendFile(path.join(pwd, 'public/favicon.ico'))\r\n})\r\n\r\napp.get('/controller', function(req, res){\r\n  res.sendFile(path.join(pwd, 'public/controller.html'))\r\n})\r\n\r\napp.get('/', function(req, res) {\r\n  res.sendFile(path.join(pwd, 'public/index.html'))\r\n})\r\n\r\nconst server = http.createServer(app)\r\nconst io = socketIO(server)\r\n\r\nio.on('connection', serverIO.bind(undefined, io))\r\n\r\nserver.listen(port, host, function(err) {\r\n  if (err) log.error(err)\r\n  else {\r\n    log.info(`Listening at http://${host}:${port}`)\r\n  }\r\n})\r\n"],"names":["winston","require","path","pwd","process","env","PWD","cwd","logger","Logger","transports","Console","File","filename","join","args","debug","info","warn","error","INPUT_QUERY","QUERY_RESPONSE","createInputQuery","id","query","initialState","LIST_QUERY","LIST_QUERY_RESPONSE","optionsSelector","state","options","createListQuery","SETUP","createSetup","PLAYER_NAME_SET","CLASS_ID_SET","RACE_ID_SET","STACK_PUSH","STACK_POP","setPlayerNameAction","playerName","setPlayerClassIdAction","classId","setPlayerRaceIdAction","raceId","pushClientStateAction","name","popClientStateAction","returnState","getStack","stack","getLastStackState","length","getLastStackStateName","lastStackState","undefined","CONTEXT_SPAWNED","CONTEXT_DESPAWNED","CONTEXT_ACTION","contextAction","guid","action","contextSpawnedAction","contextDespawnedAction","getState","dispatch","next","type","message","nextState","data","stateId","map","s","push","splitHead","slice","match","minimatch","createStackReducer","reducersMap","prevState","MAX_ITER","iter","Error","Object","keys","reduce","acc","playerSetupReducer","PLAYER_JOIN","PLAYER_ACTION","gameReducer","players","tail","head","playerId","wrappedAction","LOAD_STATE","allClassesSelector","classes","allRacesSelector","races","loadStateAction","getContext","contexts","rootReducer","option","BATTLE","fromState","allClasses","allRaces","serverMiddleware","result","onEnter","onReturn","handler","clientStateHandlers","onAction","shallowEqual","oldState","newState","resultOldToNew","oldKey","resultNewToOld","newKey","clientGuidToSocket","getControllerSocket","JSON","stringify","stateBefore","stateAfter","stateChanged","forEach","key","targetSocket","emit","dataDirPath","stateFilePath","clientSocketIdToGuid","controllerSocket","fs","existsSync","mkdirSync","stateStr","readFileSync","e","writeFileSync","flag","trim","store","createStore","parse","applyMiddleware","responseMiddleware","bind","subscribe","persistState","currentState","onSocket","io","socket","ipAddress","request","connection","remoteAddress","clientId","on","app","express","host","port","PORT","use","static","get","req","res","sendFile","server","http","createServer","socketIO","serverIO","listen","err","log"],"mappings":"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"}