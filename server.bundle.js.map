{"version":3,"file":null,"sources":["src/server/log.js","src/utils/guid.js","src/utils/shallow-equal.js","src/utils/changed.js","src/model/context-reducer.js","src/model/global-reducer.js","src/server/states/introduction.js","src/server/states/class-selection.js","src/selectors/shared-context.js","src/server/states/town-lobby.js","src/server/middleware/server-middleware.js","src/server/middleware/response-middleware.js","src/server/server-io.js","src/server/index.js"],"sourcesContent":["const winston = require('winston')\nconst path = require('path')\n\nconst logger = new (winston.Logger)({\n  transports: [\n    new (winston.transports.Console)(),\n    new (winston.transports.File)({ filename: path.join(__dirname, 'data/server.log')})\n  ]\n})\n\nexport default {\n  debug(...args){\n    logger.debug(...args)\n  },\n  info(...args){\n    logger.info(...args)\n  },\n  warn(...args){\n    logger.warn(...args)\n  },\n  error(...args){\n    logger.error(...args)\n  }\n}","function s4() {\n  return Math.floor((1 + Math.random()) * 0x10000)\n    .toString(16)\n    .substring(1);\n}\n\nexport default function guid() {\n\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n    s4() + '-' + s4() + s4() + s4()\n}\n","export default function shallowEqual(oldState, newState){\n  const resultOldToNew = Object.keys(oldState).reduce((result, oldKey) => {\n    return result === true ? result : oldState[oldKey] !== newState[oldKey]\n  }, false)\n\n  const resultNewToOld = Object.keys(newState).reduce((result, newKey) => {\n    return result === true ? result : oldState[newKey] !== newState[newKey]\n  }, false)\n\n  return !resultNewToOld && !resultOldToNew\n}","import shallowEqual from './shallow-equal'\n\nexport default function changed(oldState, newState){\n\n  return shallowEqual(oldState, newState) ? oldState : newState\n}","import {guid} from '../utils'\n\nexport function message(from, to, message){\n  return {\n    type: 'MESSAGE',\n    id: guid(),\n    from: from,\n    guid: (to !== 'all'? to : undefined),\n    to: to,\n    message: message\n  }\n}\n\nexport function setState(guid, name){\n  return {\n    type : 'CLIENT_STATE_ENTER_REPLACE',\n    guid : guid,\n    name : name\n  }\n}\n\nexport function setName(guid, name){\n  return {\n    type : 'CLIENT_SET_NAME',\n    guid : guid,\n    name : name\n  }\n}\n\nexport function setClass(guid, className){\n  return {\n    type : 'CLIENT_SET_CLASS',\n    guid : guid,\n    name : className\n  }\n}\n\nconst initialState = {\n  name : 'Noname',\n  className: 'Noone',\n  actionState:[],\n  messages : [{\n    id : guid(),\n    from : 'Chat System',\n    to : 'all',\n    message : 'Welcome to chat'\n  }]\n}\n\nexport default function contextReducer(state = initialState, action){\n  switch(action.type){\n    case 'CLIENT_STATE_ENTER_PUSH': return {\n      ...state,\n      actionState: state.actionState.concat(action.name)\n    }\n    case 'CLIENT_STATE_ENTER_REPLACE' : return {\n      ...state,\n      actionState: state.actionState.slice(0,state.actionState.length-1).concat(action.name)\n    }\n    case 'MESSAGE' : return {\n      ...state,\n      messages : state.messages.concat({\n        id : action.id,\n        from: action.from,\n        to: action.to,\n        message: action.message\n      })\n    }\n    case 'CLIENT_SET_NAME' : return {\n      ...state,\n      name : action.name\n    }\n    case 'CLIENT_SET_CLASS' : return {\n      ...state,\n      className : action.name\n    }\n    case 'LOAD_CLIENT_STATE' : return action.state\n    default: return state\n  }\n}\n","import sharedContextReducer from './context-reducer'\nimport {combineReducers} from 'redux'\nimport {changed} from '../utils'\n\nconst initialState = {\n  connected : false,\n  shared : sharedContextReducer(undefined, {type:'@INIT@'})\n}\n\nfunction clientContextReducer(state = initialState, action){\n  switch (action.type){\n    case 'CONTEXT_SPAWNED': return {\n      shared : sharedContextReducer(state.shared, action),\n      connected: true\n    }\n    case 'CONTEXT_DESPAWNED': return {\n      shared: sharedContextReducer(state.shared, action),\n      connected: false\n    }\n    default : return changed(state, {\n      ...state,\n      shared : sharedContextReducer(state.shared, action)\n    })\n  }\n}\n\nfunction allContextsReducer(state = {}, action){\n  switch(action.type){\n    case 'CONTEXT_SPAWNED': return {...state, [action.guid]: clientContextReducer(state[action.guid], action)}\n    case 'CONTEXT_DESPAWNED': return {...state, [action.guid]: clientContextReducer(state[action.guid], action)}\n    default : return changed(state, Object.keys(state).reduce((newState, context) => {\n      if(action.guid){\n        if(action.guid === context){\n          newState[context] = clientContextReducer(state[context], action)\n        } else {\n          newState[context] = state[context]\n        }\n      } else {\n        newState[context] = clientContextReducer(state[context], action)\n      }\n\n      return newState\n    }, {}))\n  }\n}\n\nexport default combineReducers({\n  contexts : allContextsReducer\n})\n","import {message, setState, setName} from '../../model/context-reducer'\n\nexport default {\n  onEnter: (guid, state, dispatch)=>{\n    dispatch(message('GM', guid, 'You are entering town gate, the sign says \"Welcome to Northwinter\". Gate keeper is looking at you very suspiciously.'))\n    dispatch(message('Gate Keeper', guid, 'Who the fuck are you?'))\n    dispatch(message('GM' , guid, 'You are quite sure that not giving this man proper answer will get you into trouble. Please type your name.'))\n  },\n  onCommand:(guid, state, dispatch, command)=>{\n    const name = command\n    dispatch(message('Gate Keeper', guid, `So... Your name is ${command}. I have never heard about you.`))\n    dispatch(message('GM', guid, 'Gate Keeper now looks at you even more suspiciously.'))\n    dispatch(setName(guid, name))\n    dispatch(setState(guid, 'classSelection'))\n  }\n}","import {message, setClass, setState} from '../../model/context-reducer'\n\nconst classes = ['mage', 'warrior', 'priest', 'hunter', 'stone']\nconst gateKeeper = 'Gate Keeper'\n\nexport default {\n  onEnter: (guid, state, dispatch)=>{\n    dispatch(message(gateKeeper, guid, 'Listen buddy, we have rules here, and the rules are: '+\n      'Every fucker entering that town behind me must be on the list I have here. If not...'))\n    dispatch(message('GM', guid, 'Gate keeper looks at amulet you have on your neck.'))\n\n    dispatch(message(gateKeeper, guid,' well give me a second and I will sign you in.'))\n    dispatch(message(gateKeeper, guid,'I just need to know your class'))\n    dispatch(message('GM', guid, `Available classes are: ${classes.join(', ')} type in the name of the class you want`))\n  },\n  onCommand:(guid, state, dispatch, command)=>{\n    if(classes.includes(command)){\n      dispatch(message(gateKeeper, guid, 'Yes... yes... we allow those guys in, come in...'))\n      dispatch(setClass(guid, command))\n      dispatch(setState(guid, 'townLobby'))\n    } else {\n      dispatch(message(gateKeeper, guid, `No, we don\\'t allow any ${command} in this town. You must be thinking about something else.`))\n    }\n  }\n}","export function name(state, guid){\n  return state.contexts[guid].shared.name\n}\n\nexport function className(state, guid){\n  return state.contexts[guid].shared.className\n}","import {message} from '../../model/context-reducer'\nimport {name, className} from '../../selectors/shared-context'\n\nconst GM = 'GM'\n\nexport default {\n  onEnter: (guid, state, dispatch)=>{\n    dispatch(message(GM, guid, 'You are entering the town area. You see your friends here.'))\n  },\n  onCommand:(guid, state, dispatch, command)=>{\n    dispatch(message(`${name(state, guid)}[${className(state, guid)}]`, 'all', command))\n  }\n}","import * as actionStateHandlers from './../states'\nimport log from '../log'\n\nexport default function serverMiddleware({ getState, dispatch }) {\n  return (next) => (action) => {\n    if(action.type === 'CONTEXT_SPAWNED'){\n      const result = next(action)\n      if(getState().contexts[action.guid].shared.actionState.length === 0){\n        dispatch({\n          type: 'CLIENT_STATE_ENTER_PUSH',\n          guid: action.guid,\n          name: 'introduction'\n        })\n      }\n      return result\n    } else if(action.type === 'CLIENT_STATE_ENTER_PUSH' || action.type === 'CLIENT_STATE_ENTER_REPLACE') {\n      const result = next(action)\n      const currActionState = getState().contexts[action.guid].shared.actionState\n      if (currActionState.length > 0) {\n        const name = currActionState[currActionState.length - 1]\n        log.info(`${action.guid} entering state ${name}`)\n        actionStateHandlers[name].onEnter(action.guid, getState(), dispatch)\n      }\n      return result\n    } else if(action.type === 'COMMAND_REQUEST'){\n      const currActionState = getState().contexts[action.guid].shared.actionState\n      if (currActionState.length > 0) {\n        const name = currActionState[currActionState.length - 1]\n        actionStateHandlers[name].onCommand(action.guid, getState(), dispatch, action.command)\n      }\n    } else {\n      return next(action)\n    }\n  }\n}","import {shallowEqual} from '../../utils'\nimport log from '../log'\n\nexport default function serverMiddleware(clientGuidToSocket, { getState, dispatch }) {\n  return (next) => (action) => {\n    log.info(`Action ${JSON.stringify(action)}`)\n    const stateBeforeRequest = getState()\n    const result = next(action)\n    const stateAfterRequest = getState()\n    Object.keys(stateBeforeRequest.contexts).forEach((key) => {\n\n      const stateChanged = !shallowEqual(stateBeforeRequest.contexts[key].shared, stateAfterRequest.contexts[key].shared)\n      const targetSocket = clientGuidToSocket[key]\n      if(stateChanged){\n        log.info(`After ${action.type} state for ${key} changed, sending action`)\n        targetSocket.emit('action', action)\n      } else {\n        log.info(`After ${action.type} state for ${key} is same`)\n      }\n    })\n    return result\n  }\n}","import fs from 'fs'\nimport path from 'path'\nimport globalReducer from 'model/global-reducer'\nimport serverMiddleware from './middleware/server-middleware'\nimport responseMiddleware from './middleware/response-middleware'\nimport log from './log'\nimport {createStore, applyMiddleware} from 'redux'\n\nconst dataDirPath = path.join(__dirname, 'data')\nconst stateFilePath = path.join(__dirname, 'data/state.json')\n\nconst clientSocketIdToGuid = {}\nconst clientGuidToSocket = {}\n\nif (!fs.existsSync(dataDirPath)){\n  fs.mkdirSync(dataDirPath)\n}\nlet stateStr = '{}'\ntry {\n  stateStr = fs.readFileSync(stateFilePath, 'utf8')\n} catch(e) {\n  fs.writeFileSync(stateFilePath, '{}', { flag: 'wx' })\n}\n\nif(stateStr.trim().length === 0) stateStr = '{}'\nconst store = createStore(globalReducer, JSON.parse(stateStr), applyMiddleware(serverMiddleware,responseMiddleware.bind(undefined,clientGuidToSocket)))\n\nstore.subscribe(function persistState(){\n  const currentState = store.getState()\n  if(currentState === undefined){\n    log.warn('Saving empty state.')\n  } else {\n    fs.writeFile(stateFilePath, JSON.stringify(currentState, null, 2), function(err) {\n      if(err) {\n        return log.error(err)\n      }\n    })\n  }\n})\n\nexport default function onSocket(io, socket){\n  const ipAddress = socket.request.connection.remoteAddress\n  const clientId = `${ipAddress}`\n  log.info(`client ??@${clientId} connected`)\n\n  socket.on('authentication', function(authToken){\n    clientSocketIdToGuid[socket.id] = authToken\n    clientGuidToSocket[authToken] = socket\n    log.info(`client ??@${clientId} authenticated as ${authToken}`)\n    store.dispatch({\n      type: 'CONTEXT_SPAWNED',\n      guid: authToken\n    })\n    socket.emit('initial_state', store.getState().contexts[authToken].shared)\n  })\n\n  socket.on('disconnect', function() {\n    log.info(`client ${clientSocketIdToGuid[socket.id]}@${clientId} disconnected`)\n    store.dispatch({\n      type: 'CONTEXT_DESPAWNED',\n      guid: clientSocketIdToGuid[socket.id]\n    })\n    clientGuidToSocket[clientSocketIdToGuid[socket.id]] = undefined\n    clientSocketIdToGuid[socket.id] = undefined\n  })\n\n  socket.on('command_request', function(action){\n    if(action.type !== 'COMMAND_REQUEST') return\n    log.info(`client ${clientSocketIdToGuid[socket.id]}@${clientId} command:${JSON.stringify(action.command)}`)\n    store.dispatch({\n      type: action.type,\n      guid: clientSocketIdToGuid[socket.id],\n      command: action.command\n    })\n  })\n}\n","import express from 'express'\nimport path from 'path'\nimport http from 'http'\nimport socketIO from 'socket.io'\n\nimport log from './log'\nimport serverIO from './server-io'\n\nconst app = express()\nconst host = '0.0.0.0'\nconst port = process.env.PORT || 8080\n\nprocess.env.PWD = process.cwd()\n\napp.use('/public', express.static(path.join(process.env.PWD, 'public')))\n\napp.get('/favicon.ico', function(req, res) {\n  res.sendFile(path.join(process.env.PWD, 'public/favicon.ico'))\n})\n\napp.get('/', function(req, res) {\n  res.sendFile(path.join(process.env.PWD, 'public/index.html'))\n})\n\nconst server = http.createServer(app)\nconst io = socketIO(server)\n\nio.on('connection', serverIO.bind(undefined, io))\n\nserver.listen(port, host, function(err) {\n  if (err) log.error(err)\n  else {\n    log.info(`Listening at http://${host}:${port}`)\n  }\n})\n"],"names":["winston","require","path","logger","Logger","transports","Console","File","filename","join","__dirname","args","debug","info","warn","error","s4","Math","floor","random","toString","substring","guid","shallowEqual","oldState","newState","resultOldToNew","Object","keys","reduce","result","oldKey","resultNewToOld","newKey","changed","message","from","to","undefined","setState","name","setName","setClass","className","initialState","contextReducer","state","action","type","actionState","concat","slice","length","messages","id","sharedContextReducer","clientContextReducer","shared","allContextsReducer","context","combineReducers","dispatch","command","classes","gateKeeper","includes","contexts","GM","serverMiddleware","getState","next","currActionState","onEnter","onCommand","clientGuidToSocket","JSON","stringify","stateBeforeRequest","stateAfterRequest","forEach","key","stateChanged","targetSocket","emit","dataDirPath","stateFilePath","clientSocketIdToGuid","fs","existsSync","mkdirSync","stateStr","readFileSync","e","writeFileSync","flag","trim","store","createStore","globalReducer","parse","applyMiddleware","responseMiddleware","bind","subscribe","persistState","currentState","writeFile","err","log","onSocket","io","socket","ipAddress","request","connection","remoteAddress","clientId","on","authToken","app","express","host","port","process","env","PORT","PWD","cwd","use","static","get","req","res","sendFile","server","http","createServer","socketIO","serverIO","listen"],"mappings":"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"}