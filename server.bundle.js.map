{"version":3,"file":null,"sources":["src/server/log.js","src/utils/guid.js","src/utils/shallow-equal.js","src/utils/changed.js","src/model/states/chat.js","src/model/states/index.js","src/model/client-reducer.js","src/model/server-reducer.js","src/server/states/battle.js","src/model/states/setup.js","src/server/states/chat.js","src/server/states/index.js","src/server/middleware/server-middleware.js","src/server/middleware/response-middleware.js","src/server/server-io.js","src/server/index.js"],"sourcesContent":["const winston = require('winston')\nconst path = require('path')\n\nconst logger = new (winston.Logger)({\n  transports: [\n    new (winston.transports.Console)(),\n    new (winston.transports.File)({ filename: path.join(__dirname, 'data/server.log')})\n  ]\n})\n\nexport default {\n  debug(...args){\n    logger.debug(...args)\n  },\n  info(...args){\n    logger.info(...args)\n  },\n  warn(...args){\n    logger.warn(...args)\n  },\n  error(...args){\n    logger.error(...args)\n  }\n}","function s4() {\n  return Math.floor((1 + Math.random()) * 0x10000)\n    .toString(16)\n    .substring(1);\n}\n\nexport default function guid() {\n\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n    s4() + '-' + s4() + s4() + s4()\n}\n","export default function shallowEqual(oldState, newState){\n  const resultOldToNew = Object.keys(oldState).reduce((result, oldKey) => {\n    return result === true ? result : oldState[oldKey] !== newState[oldKey]\n  }, false)\n\n  const resultNewToOld = Object.keys(newState).reduce((result, newKey) => {\n    return result === true ? result : oldState[newKey] !== newState[newKey]\n  }, false)\n\n  return !resultNewToOld && !resultOldToNew\n}","import shallowEqual from './shallow-equal'\n\nexport default function changed(oldState, newState){\n\n  return shallowEqual(oldState, newState) ? oldState : newState\n}","import {guid as guidGenerator} from '../../utils'\n\nexport const STATE_NAME = 'chat'\n\nexport const MESSAGE = 'CHAT:MESSAGE'\nexport const SET_PLAYER_NAME = 'CHAT:SET_PLAYER_NAME'\n\n/**\n *\n * @param {string} to\n * @param {string} message\n * @param {string} from\n * @returns {{type: string, id:string, from: string, guid: string|undefined, to: string, message: string}}\n */\nexport function messageAction(to, message, from) {\n  return {\n    type: MESSAGE,\n    id: guidGenerator(),\n    from: from,\n    guid: (to !== 'all' ? to : undefined),\n    to: to,\n    message: message\n  }\n}\n\nexport function setPlayerNameAction(playerName, guid) {\n  return {\n    type: SET_PLAYER_NAME,\n    guid: guid,\n    playerName: playerName\n  }\n}\n\nexport function playerNameSelector(state){\n  return state.name\n}\n\nconst initialState = {\n  name: STATE_NAME,\n  playerName: 'Noname',\n  messages: []\n}\n\nexport default function introduction(state = initialState, action) {\n  switch (action.type) {\n    case MESSAGE :\n      return {\n        ...state,\n        messages: state.messages.concat({\n          id: action.id,\n          from: action.from,\n          to: action.to,\n          message: action.message\n        })\n      }\n    case SET_PLAYER_NAME :\n      return {\n        ...state,\n        playerName: action.playerName\n      }\n    default :\n      return state\n  }\n}","//import rollDices from './roll-dices'\n//import introduction from './introduction'\n//import classSelection from './class-selection'\n//import townLobby from './town-lobby'\n//import assignDices from './assign-dices'\n//import battle from './battle'\nimport chat from './chat'\n\nexport {\n  //rollDices, introduction, classSelection, townLobby, assignDices, battle,\nchat}","import * as clientStateReducers from './states'\n\nexport const CLIENT_STATE_LOAD = 'CLIENT_STATE_LOAD'\nexport const CLIENT_STATE_PUSH = 'CLIENT_STATE_PUSH'\nexport const CLIENT_STATE_POP = 'CLIENT_STATE_POP'\n\nexport function pushClientStateAction(name, initialState, guid){\n  return {\n    type: CLIENT_STATE_PUSH ,\n    guid: guid,\n    name: name,\n    initialState : initialState\n  }\n}\n\nexport function popClientStateAction(returnState, guid) {\n  return {\n    type: CLIENT_STATE_POP,\n    guid: guid,\n    returnState : returnState\n  }\n}\n\nexport function loadClientStateAction(state, guid){\n  return {\n    type: CLIENT_STATE_LOAD,\n    guid : guid,\n    state: state\n  }\n}\n\n\n\nexport function currentClientStateSelector(state){\n  return state[state.length - 1]\n}\n\nexport function currentClientStateNameSelector(state){\n  return currentClientStateSelector(state).name\n}\n\nexport function clientStateSelector(state, name){\n  return state.find(s => s.name === name)\n}\n\n\n\nexport default function contextReducer(state = [], action) {\n  switch (action.type) {\n    case CLIENT_STATE_LOAD :\n      return action.state\n    case CLIENT_STATE_PUSH :\n      return state.concat(clientStateReducers[action.name](undefined, action))\n    case CLIENT_STATE_POP :\n      return state.slice(0,state.length-1)\n    default :{\n      if(state.length === 0) return state\n      const newState = state.map(s => clientStateReducers[s.name](s,action))\n      return newState.find((s,index)=> state[index] !== s) === undefined ? state : newState\n    }\n  }\n}\n","import clientReducer from './client-reducer'\nimport {combineReducers} from 'redux'\nimport {changed} from '../utils'\n\nexport const CLIENT_SPAWNED = 'CLIENT_SPAWNED'\nexport const CLIENT_DESPAWNED = 'CLIENT_DESPAWNED'\nexport const ACTION_REQUEST = 'ACTION_REQUEST'\n\nexport function clientSpawnedAction(guid) {\n  return {\n    type: CLIENT_SPAWNED,\n    guid: guid\n  }\n}\n\nexport function clientDespawnedAction(guid){\n  return {\n    type: CLIENT_DESPAWNED,\n    guid: guid\n  }\n}\n\nexport function actionRequest(action, guid){\n  return {\n    type : ACTION_REQUEST,\n    guid : guid,\n    action : action\n  }\n}\n\nexport function clientSelector(state, guid){\n  return state.contexts[guid].shared\n}\n\nexport function forEachClientSelector(state, callback){\n  state.contexts.forEach((context, index) => callback(context, state.contexts[context], index))\n}\n\nconst initialState = {\n  connected : false,\n  shared : clientReducer(undefined, {type:'@INIT@'})\n}\n\nfunction clientContextReducer(state = initialState, action){\n  switch (action.type){\n    case CLIENT_SPAWNED: return {\n      shared : clientReducer(state.shared, action),\n      connected: true\n    }\n    case CLIENT_DESPAWNED: return {\n      shared: clientReducer(state.shared, action),\n      connected: false\n    }\n    default : return changed(state, {\n      ...state,\n      shared : clientReducer(state.shared, action)\n    })\n  }\n}\n\nfunction allContextsReducer(state = {}, action){\n  switch(action.type){\n    case CLIENT_SPAWNED: return {...state, [action.guid]: clientContextReducer(state[action.guid], action)}\n    case CLIENT_DESPAWNED: return {...state, [action.guid]: clientContextReducer(state[action.guid], action)}\n    default : return changed(state, Object.keys(state).reduce((newState, context) => {\n      if(action.guid){\n        if(!context) throw Error('Should not be null')\n        if(action.guid === context){\n          newState[context] = clientContextReducer(state[context], action)\n        } else {\n          newState[context] = state[context]\n        }\n      } else {\n        newState[context] = clientContextReducer(state[context], action)\n      }\n\n      return newState\n    }, {}))\n  }\n}\n\nexport default combineReducers({\n  contexts : allContextsReducer\n})\n","import {messageAction} from '../../model/states/chat'\nimport {pushClientStateAction} from '../../model/client-reducer'\nimport log from '../log'\n\nconst GM = 'GM'\n\nexport default {\n  onEnter: (guid, getState, dispatch)=>{\n    dispatch(messageAction(GM, guid, 'You are entering battle.'))\n    dispatch(pushClientStateAction('rollDices',guid))\n  },\n  onReturn:(guid, getState, dispatch, fromState, returnedState)=>{\n    log.info(`${guid} Return from state: `, fromState, returnedState)\n    if(fromState === 'rollDices'){\n      dispatch(pushClientStateAction('assignDices', {\n        rolledDices : returnedState.rolledDices\n      },guid))\n    }\n  },\n  onCommand:(guid, getState, dispatch, command)=>{\n    //const state = getState()\n\n  }\n}","export const STATE_NAME = 'setup'\n\nexport const SET_PLAYER_CLASS_ID = 'SETUP:SET_PLAYER_CLASS_ID'\n\nexport function setPlayerClassIdAction(guid, classId) {\n  return {\n    type: SET_PLAYER_CLASS_ID,\n    guid: guid,\n    classId: classId\n  }\n}\n\nexport function classIdSelector(state){\n  return state.classId\n}\n\nexport function actionsSelector(state){\n  return state.actions\n}\n\nconst initialState = {\n  name: STATE_NAME,\n  classId: 'mage',\n  actions: [\n    {\n      name: 'Shield',\n      slots: [{\n        require: 1\n      }]\n    },\n    {\n      name: 'Maneuver',\n      slots: [{\n        require: 3\n      }]\n    },\n    {\n      name: 'Throw',\n      slots: [{\n        require: 6\n      }]\n    },\n    {\n      name: 'Fireball',\n      slots: [\n        {\n          require: 5\n        },\n        {\n          require: 6\n        }\n      ]\n    }]\n\n}\n\nexport default function introduction(state = initialState, action) {\n  switch (action.type) {\n    case SET_PLAYER_CLASS_ID :\n      return {\n        ...state,\n        className: action.name\n      }\n    default :\n      return state\n  }\n}","import {STATE_NAME as CHAT_STATE_NAME, MESSAGE, messageAction, setPlayerNameAction} from '../../model/states/chat'\nimport {STATE_NAME as SETUP_STATE_NAME} from '../../model/states/setup'\nimport {pushClientStateAction, currentClientStateNameSelector} from '../../model/client-reducer'\n\nfunction onMessage(getState, dispatch, action){\n  if(currentClientStateNameSelector(getState()) === CHAT_STATE_NAME){\n    dispatch(setPlayerNameAction(action.message, action.guid))\n    dispatch(pushClientStateAction(SETUP_STATE_NAME, {}, action.guid))\n  } else {\n    dispatch(action)\n  }\n}\n\nexport default {\n  onEnter: (getState, dispatch, action)=>{\n    dispatch(messageAction(action.guid , 'Name?', 'Chat System'))\n  },\n  onAction:(getState, dispatch, action)=>{\n    switch(action.type){\n      case MESSAGE : return onMessage(getState, dispatch, action)\n    }\n  }\n}","//import introduction from './introduction'\n//import classSelection from './class-selection'\n//import townLobby from './town-lobby'\n//import rollDices from './roll-dices'\n//import assignDices from './assign-dices'\nimport battle from './battle'\nimport chat from './chat'\n\nexport {\n  //introduction, classSelection, townLobby, rollDices, assignDices,\n  battle, chat}","import * as clientStateHandlers from './../states'\nimport log from '../log'\nimport {CLIENT_SPAWNED, ACTION_REQUEST, clientSelector} from '../../model/server-reducer'\nimport {\n  CLIENT_STATE_PUSH,\n  CLIENT_STATE_POP,\n  currentClientStateNameSelector,\n  pushClientStateAction\n} from '../../model/client-reducer'\nimport {STATE_NAME as CHAT_STATE_NAME} from '../../model/states/chat'\n\nexport default function serverMiddleware({getState, dispatch}) {\n  return (next) => (action) => {\n    if (action.type === CLIENT_SPAWNED) {\n      const result = next(action)\n      if (clientSelector(getState(), action.guid).length === 0) {\n        dispatch(pushClientStateAction(CHAT_STATE_NAME,{}, action.guid))\n      }\n      return result\n    } else if (action.type === CLIENT_STATE_PUSH ) {\n      const result = next(action)\n      if (clientSelector(getState(), action.guid).length > 0) {\n        const name = currentClientStateNameSelector(clientSelector(getState(), action.guid))\n        log.info(`${action.guid} entering state ${name}`)\n        if (clientStateHandlers[name].onEnter) {\n          clientStateHandlers[name].onEnter(getState, dispatch, action)\n        }\n      }\n      return result\n    } else if (action.type === CLIENT_STATE_POP) {\n      const fromStateName = currentClientStateNameSelector(clientSelector(getState(), action.guid))\n      const result = next(action)\n      if (clientSelector(getState(), action.guid).length > 0) {\n        const name = currentClientStateNameSelector(clientSelector(getState(), action.guid))\n        log.info(`${action.guid} returning from ${fromStateName} state  to ${name} state`)\n        if (clientStateHandlers[name].onReturn) {\n          clientStateHandlers[name].onReturn(getState, dispatch, action, fromStateName)\n        }\n      }\n      return result\n    } else if (action.type === ACTION_REQUEST) {\n      if (clientSelector(getState(), action.guid).length > 0) {\n        const name = currentClientStateNameSelector(clientSelector(getState(), action.guid))\n        clientStateHandlers[name].onAction(getState, dispatch, action)\n      }\n    } else {\n      return next(action)\n    }\n  }\n}","import {shallowEqual} from '../../utils'\nimport log from '../log'\nimport {clientSelector} from '../../model/server-reducer';\n\nexport default function serverMiddleware(clientGuidToSocket, {getState}) {\n  return (next) => (action) => {\n    log.info(`Action ${JSON.stringify(action)}`)\n\n    const stateBefore = getState()\n    const result = next(action)\n    const stateAfter = getState()\n\n    Object.keys(stateAfter.contexts).forEach((key) => {\n\n      const clientStateBefore = clientSelector(stateBefore, key)\n      const clientStateAfter = clientSelector(stateAfter, key)\n\n      const stateChanged = !shallowEqual(clientStateBefore, clientStateAfter)\n      const targetSocket = clientGuidToSocket[key]\n      if (stateChanged && targetSocket) {\n        log.info(`Sending to ${key}`)\n        targetSocket.emit('action', action)\n      }\n\n      if (!targetSocket) {\n        log.warn(`Client ${key} disconnected and is not receiving state changes`)\n      }\n    })\n    return result\n  }\n}","import fs from 'fs'\nimport path from 'path'\nimport globalReducer, {clientSpawnedAction, clientDespawnedAction, actionRequest} from 'model/server-reducer'\nimport serverMiddleware from './middleware/server-middleware'\nimport responseMiddleware from './middleware/response-middleware'\nimport log from './log'\nimport {createStore, applyMiddleware} from 'redux'\n\nconst dataDirPath = path.join(__dirname, 'data')\nconst stateFilePath = path.join(__dirname, 'data/state.json')\n\nconst clientSocketIdToGuid = {}\nconst clientGuidToSocket = {}\n\nif (!fs.existsSync(dataDirPath)){\n  fs.mkdirSync(dataDirPath)\n}\nlet stateStr = '{}'\ntry {\n  stateStr = fs.readFileSync(stateFilePath, 'utf8')\n} catch(e) {\n  fs.writeFileSync(stateFilePath, '{}', { flag: 'wx' })\n}\n\nif(stateStr.trim().length === 0) stateStr = '{}'\nconst store = createStore(globalReducer, JSON.parse(stateStr), applyMiddleware(serverMiddleware,responseMiddleware.bind(undefined,clientGuidToSocket)))\n\nstore.subscribe(function persistState(){\n  const currentState = store.getState()\n  if(currentState === undefined){\n    log.warn('Saving empty state.')\n  } else {\n    fs.writeFileSync(stateFilePath, JSON.stringify(currentState, null, 2))\n  }\n})\n\nexport default function onSocket(io, socket){\n  const ipAddress = socket.request.connection.remoteAddress\n  const clientId = `${ipAddress}`\n  log.info(`client ??@${clientId} connected`)\n\n  socket.on('authentication', function(authToken){\n    clientSocketIdToGuid[socket.id] = authToken\n    clientGuidToSocket[authToken] = socket\n    log.info(`client ??@${clientId} authenticated as ${authToken}`)\n    store.dispatch(clientSpawnedAction(authToken))\n    socket.emit('initial_state', store.getState().contexts[authToken].shared)\n  })\n\n  socket.on('disconnect', function() {\n    const guid = clientSocketIdToGuid[socket.id]\n    log.info(`client ${guid}@${clientId} disconnected`)\n    store.dispatch(clientDespawnedAction(guid))\n    clientGuidToSocket[guid] = undefined\n    clientSocketIdToGuid[socket.id] = undefined\n  })\n\n  socket.on('command_request', function(action){\n    const guid = clientSocketIdToGuid[socket.id]\n    log.info(`client ${guid}@${clientId} action: ${JSON.stringify(action)}`)\n    store.dispatch(actionRequest({...action, guid}, guid))\n  })\n}\n","import express from 'express'\nimport path from 'path'\nimport http from 'http'\nimport socketIO from 'socket.io'\n\nimport log from './log'\nimport serverIO from './server-io'\n\nconst app = express()\nconst host = '0.0.0.0'\nconst port = process.env.PORT || 8080\n\nprocess.env.PWD = process.cwd()\n\napp.use('/public', express.static(path.join(process.env.PWD, 'public')))\n\napp.get('/favicon.ico', function(req, res) {\n  res.sendFile(path.join(process.env.PWD, 'public/favicon.ico'))\n})\n\napp.get('/', function(req, res) {\n  res.sendFile(path.join(process.env.PWD, 'public/index.html'))\n})\n\nconst server = http.createServer(app)\nconst io = socketIO(server)\n\nio.on('connection', serverIO.bind(undefined, io))\n\nserver.listen(port, host, function(err) {\n  if (err) log.error(err)\n  else {\n    log.info(`Listening at http://${host}:${port}`)\n  }\n})\n"],"names":["winston","require","path","logger","Logger","transports","Console","File","filename","join","__dirname","args","debug","info","warn","error","s4","Math","floor","random","toString","substring","guid","shallowEqual","oldState","newState","resultOldToNew","Object","keys","reduce","result","oldKey","resultNewToOld","newKey","changed","STATE_NAME","MESSAGE","SET_PLAYER_NAME","messageAction","to","message","from","guidGenerator","undefined","setPlayerNameAction","playerName","initialState","introduction","state","action","type","messages","concat","id","CLIENT_STATE_LOAD","CLIENT_STATE_PUSH","CLIENT_STATE_POP","pushClientStateAction","name","currentClientStateSelector","length","currentClientStateNameSelector","contextReducer","clientStateReducers","slice","map","s","find","index","CLIENT_SPAWNED","CLIENT_DESPAWNED","ACTION_REQUEST","clientSpawnedAction","clientDespawnedAction","actionRequest","clientSelector","contexts","shared","clientReducer","clientContextReducer","allContextsReducer","context","Error","combineReducers","GM","getState","dispatch","fromState","returnedState","rolledDices","command","onMessage","CHAT_STATE_NAME","SETUP_STATE_NAME","serverMiddleware","next","clientStateHandlers","onEnter","fromStateName","onReturn","onAction","clientGuidToSocket","JSON","stringify","stateBefore","stateAfter","forEach","key","clientStateBefore","clientStateAfter","stateChanged","targetSocket","emit","dataDirPath","stateFilePath","clientSocketIdToGuid","fs","existsSync","mkdirSync","stateStr","readFileSync","e","writeFileSync","flag","trim","store","createStore","globalReducer","parse","applyMiddleware","responseMiddleware","bind","subscribe","persistState","currentState","onSocket","io","socket","ipAddress","request","connection","remoteAddress","clientId","on","authToken","app","express","host","port","process","env","PORT","PWD","cwd","use","static","get","req","res","sendFile","server","http","createServer","socketIO","serverIO","listen","err","log"],"mappings":"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"}